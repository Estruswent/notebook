{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to My Notebook","text":""},{"location":"#_1","title":"\u5173\u4e8e\u7f51\u7ad9","text":"<p>\u829d\u58eb\u6211\u7684\u65b0\u7b14\u8bb0\u672c\u7f51\u7ad9\uff0c\u662f\u4e2a\u9759\u6001\u7684\u4e1c\u897f\uff0c\u5b83\u4f1a\u5b58\u4e00\u70b9\u6211\u7684\u5783\u573e\u548c\u5b9d\u8d1d\u3002</p>"},{"location":"#_2","title":"\u8054\u7cfb\u4f5c\u8005","text":"<ul> <li>\u90ae\u7bb1\uff1ae5truswent@outlook.com</li> </ul>"},{"location":"#_3","title":"\u5173\u4e8e\u4f5c\u8005","text":"<ul> <li>\u6211\u662f\u4e00\u540d\u5e73\u51e1\u7684\u5b66\u7272\uff0c\u5f88\u591a\u4e1c\u897f\u4e0d\u592a\u80fd\u5199\u5f97\u597d\uff1b</li> <li>\u82e5\u7b14\u8bb0\u5b58\u5728\u758f\u6f0f\uff0c\u8fd8\u671b\u60a8\u6d77\u6db5\uff0c\u8bf7\u52d8\u8bef\u540e\u901a\u8fc7\u90ae\u4ef6\u8054\u7cfb\u6211\u4fee\u6539\uff1b</li> <li>\u82e5\u613f\u610f\u5206\u4eab\u60a8\u7684\u7b14\u8bb0\u6216\u6302\u53cb\u94fe\uff0c\u53ef\u4ee5\u901a\u8fc7\u90ae\u7bb1\u8054\u7cfb\uff1b</li> <li>\u6211\u662f\u4e2a\u61d2\u4eba\uff0c\u4f1a\u62d6\u66f4\u3002</li> </ul>"},{"location":"#_4","title":"\u7f51\u7ad9\u642d\u5efa","text":"<p>\u672c\u7f51\u7ad9\u91c7\u7528<code>mkdocs</code>\u8fdb\u884c\u642d\u5efa\uff0c\u8fd9\u4e2a\u751f\u6210\u5668\u76f8\u5f53\u7b80\u6d01\u4e14\u5b9e\u7528\uff0c\u4e3b\u8981\u4f7f\u7528<code>pymarkdown</code>\u6e32\u67d3<code>markdown</code>\u3002</p>"},{"location":"#1","title":"1.\u5b89\u88c5\u4e0e\u51c6\u5907","text":"<p><code>mkdocs</code>\u662f python \u7684\u4e00\u4e2a\u5e93\uff0c\u53ef\u4ee5\u7528<code>pip install mkdocs</code>\u6216<code>pip3 install mkdocs</code>\u4e0b\u8f7d\u3002</p> <pre><code># \u521b\u5efa\u4e00\u4e2a\u53eb note \u7684\u6587\u4ef6\u5939\n$ mkdocs new note    \n# \u8fdb\u5165\u7b14\u8bb0\u6587\u4ef6\u5939\n$ cd note\n</code></pre> <p>\u82e5\u60a8\u672a\u5c06 python \u7684\u5e93\u52a0\u5165\u73af\u5883\u53d8\u91cf\uff0c\u8bf7\u5728\u6240\u6709<code>mkdocs</code>\u6709\u5173\u547d\u4ee4\u524d\u52a0\u4e0a<code>python -m</code>\uff0c\u4f8b\u5982\uff1a<code>python -m mkdocs new note</code>\u3002</p> <p>\u6b64\u65f6\u82e5\u60a8\u80fd\u4f7f\u7528<code>tree</code>\u547d\u4ee4\u67e5\u770b\u7ed3\u6784\u7684\u8bdd\uff0c\u60a8\u80fd\u5927\u81f4\u770b\u5230\uff1a <pre><code>./\n\u251c\u2500\u2500 docs/\n\u2502     \u2514\u2500\u2500 index.md\n\u251c\u2500\u2500 mkdocs.yml\n\u2514\u2500\u2500 site/\n</code></pre></p>"},{"location":"#2","title":"2.\u914d\u7f6e\u4e0e\u67e5\u770b","text":"<p>\u521d\u59cb\u5316\u9636\u6bb5\u51c6\u5907\u6210\u529f\u540e\u5c31\u53ef\u4ee5\u8fdb\u884c\u540c\u6b65\u6e32\u67d3\u4e86\uff0c\u8fd9\u91cc\u8bf7\u5148\u5199\u597d mkdocs.yml \u7684\u76f8\u5173\u5185\u5bb9\uff0c\u5173\u4e8e\u5982\u4f55\u5199\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u8bf7\u79fb\u6b65\u914d\u7f6e\u6587\u4ef6\u2014\u2014mkdocs\u4e2d\u6587\u6587\u6863</p> <pre><code># \u5199\u597d\u4ee5\u540e\uff0c\u5728\u672c\u5730\u8fdb\u884c\u540c\u6b65\u7684\u6e32\u67d3\n$ mkdocs serve\n...\n# \u201cctrl + \u5355\u51fb\u94fe\u63a5\u201d\u5373\u53ef\u6253\u5f00\u6e32\u67d3\u7684\u7f51\u7ad9\nINFO    -  [xx:yy:zz] Serving on http://127.0.0.1:8000/\n...\n\n# \u751f\u6210\u9759\u6001\u7f51\u9875\u4ee3\u7801\n$ mkdocs build\n\n# \u6839\u636e\u914d\u7f6e\u6587\u4ef6 mkdocs.yml \u81ea\u52a8\u751f\u6210\u7f51\u9875\u6709\u5173\u7684 site \u6587\u4ef6\u5939\uff0c\u5b83\u81ea\u5df1\u4f1a\u4f20\u5230 gh-pages \u5206\u652f\n$ mkdocs gh-deploy\n</code></pre>"},{"location":"%E5%85%B6%E5%AE%83/Explorer%E4%B8%8D%E8%A7%81%E4%BA%86/","title":"Ubuntu\u5b50\u7cfb\u7edf\u6d88\u5931\u4e0d\u89c1","text":""},{"location":"%E5%85%B6%E5%AE%83/Explorer%E4%B8%8D%E8%A7%81%E4%BA%86/#_1","title":"\u95ee\u9898\u63cf\u8ff0","text":"<p>\u7591\u4f3cExplorer.exe\u4e0d\u77e5\u540d\u62bd\u98ce\u5bfc\u81f4\u6211\u627e\u4e0d\u5230\u6211\u7684\u5b50\u7cfb\u7edf\u3002</p> <p>\u5728windows powershell\u4e2d\u8f93\u5165<code>start explorer</code>\u6216<code>explorer</code>\u51fa\u73b0\u62a5\u9519\u4fe1\u606f\uff1a</p> <p><code>shell:::{52205fd8-5dfb-447d-801a-d0b52f2e83e1}</code>\u627e\u4e0d\u5230\u5e94\u7528\u7a0b\u5e8f</p>"},{"location":"%E5%85%B6%E5%AE%83/Explorer%E4%B8%8D%E8%A7%81%E4%BA%86/#_2","title":"\u89e3\u51b3\u65b9\u6848\uff1a","text":""},{"location":"%E5%85%B6%E5%AE%83/Explorer%E4%B8%8D%E8%A7%81%E4%BA%86/#_3","title":"\u65b9\u6848\u4e00\uff1a","text":"<p>\u4fee\u6539\u6ce8\u518c\u8868\uff0c\u4f46\u5b58\u5728\u98ce\u9669\uff0c\u4e0d\u8fc7\u4e00\u52b3\u6c38\u9038\uff0c\u53c2\u8003\u4ee5\u4e0b\u94fe\u63a5\u3002 https://www.tenforums.com/tutorials/127506-add-remove-linux-navigation-pane-windows-10-a.html</p>"},{"location":"%E5%85%B6%E5%AE%83/Explorer%E4%B8%8D%E8%A7%81%E4%BA%86/#_4","title":"\u65b9\u6848\u4e8c\uff1a","text":"<p>\u5728\u5de6\u4e0b\u89d2\u8fd0\u884c\u5904\u7528\u547d\u4ee4\u884c<code>\\\\wsl$</code>\u5c31\u8fdb\u5165\u6211\u7684Ubuntu\u4e86\uff0c\u4e0d\u8fc7\u5b50\u7cfb\u7edf\u4e0d\u663e\u793a\u7684\u95ee\u9898\u8fd8\u662f\u5b58\u5728......\u800c\u4e14\u4e0d\u77e5\u9053\u5176\u4ed6\u5b50\u7cfb\u7edf\u4e0b\u600e\u4e48\u5904\u7406\u8fd9\u4e00\u60c5\u51b5</p>"},{"location":"%E5%85%B6%E5%AE%83/GPG/","title":"GPG\u5bc6\u94a5\u5b9e\u73b0","text":""},{"location":"%E5%85%B6%E5%AE%83/Matplotlib/","title":"Matplotlib\u5165\u95e8","text":""},{"location":"%E5%85%B6%E5%AE%83/Matplotlib/#_1","title":"\u524d\u8a00","text":"<p>\u989d\uff0c\u5e94\u67d0\u4e9b\u8bfe\u7a0b\u6240\u9700\uff0c\u7ed8\u5236\u7b80\u5355\u7684\u56fe\u53d8\u5f97\u8d8a\u6765\u8d8a\u91cd\u8981\uff0c\u6240\u4ee5\u672c\u4eba\u53bb\u67e5\u627e\u4e86\u4e00\u4e9b\u76f8\u5173\u829d\u58eb\u5b66\u4e60\uff0c\u5e76\u7531\u6b64\u8bb0\u5f55\u4e0b\u6765\uff0c\u8fd9\u4e2a\u4e3b\u6253\u4e00\u4e2a\u5b9e\u7528\u4e3b\u4e49\u3002</p> <p>\u4e4b\u524d\u672c\u6765\u8003\u8651\u5165\u95e8matlab\u7ed8\u56fe\uff0c\u4f46\u662f\u5b66\u957f\u544a\u8beb\u672c\u4eba\u8be5\u8f6f\u4ef6\u201c\u592a\u7b28\u91cd\u201d\u4ee5\u53ca\u201c\u540e\u9762\u6ca1\u4ec0\u4e48\u5730\u65b9\u7528\u5230\u201d\uff0c\u6240\u4ee5\u63a5\u53d7\u5b66\u957f\u63a8\u8350\uff0c\u9009\u62e9\u5165\u95e8<code>matplotlib</code>\u3002</p>"},{"location":"%E5%85%B6%E5%AE%83/Matplotlib/#_2","title":"\u7b80\u4ecb","text":"<p>\"Matplotlib is a comprehensive library for creating static, animated, and interactive visualizations in Python. Matplotlib makes easy things easy and hard things possible.\" \"NetworkX is a Python package for the creation, manipulation, and study of the structure, dynamics, and functions of complex networks.\"</p> <p>\u5b98\u65b9\u6587\u672c\u4ecb\u7ecd\uff0c\u4e00\u770b\u5c31\u61c2......</p> <p>\u5927\u90e8\u5206\u4f60\u60f3\u753b\u7684\u56fe\u90fd\u53ef\u4ee5\u53c2\u8003\u8fd9\u4e2a\u8303\u4f8b\u5b98\u7f51\u3002</p> <p>Matplolib\u793a\u4f8b</p>"},{"location":"%E5%85%B6%E5%AE%83/Matplotlib/#_3","title":"\u51c6\u5907\u5de5\u4f5c","text":"<p>python\u73af\u5883\u81ea\u7136\u662f\u9700\u8981\u7684......\u4f60\u7528\u7684\u662f\u4eba\u5bb6\u7684\u5e93......</p> <p>\u672c\u4eba\u4f7f\u7528windows\u7cfb\u7edf\uff0c\u9009\u62e9\u5c06anaconda\u52a0\u5165\u73af\u5883\u53d8\u91cf\u540e\u4e0b\u8f7d<code>matplotlib</code>\u5e93\uff0c\u4e5f\u53ef\u4ee5\u7528<code>pip</code>\u7b49\u624b\u6bb5\u3002\u5728\u7ec8\u7aef\u4e2d\u8f93\u5165<code>conda install matplotlib</code>\u548c<code>conda install networkx</code>\u3002</p> <p>\u597d\u6bd4<code>#include&lt;stdio.h&gt;</code>\uff0c\u4f60\u8fd8\u9700\u8981\u5728\u5f00\u5934\u5bfc\u5165\u4f60\u7684\u5e93\uff0c\u4ee5\u4e0b\u4e3a\u53c2\u8003\u7684\u5e93\u3002</p> <pre><code># \u5bfc\u5165matplotlib\u5e93\uff0c\u5e76\u547d\u540d\u4e3ampl\nimport matplotlib as mpl\n# \u5bfc\u5165pyplot\u6a21\u5757\uff0c\u5e76\u547d\u540d\u4e3aplt\nimport matplotlib.pyplot as plt\n# \u5bfc\u5165numpy\u5e93\uff0c\u5e76\u547d\u540d\u4e3anp\nimport numpy as np\n# \u5bfc\u5165networkx\u5e93\uff0c\u5e76\u547d\u540d\u4e3anx\nimport networkx as nx\n</code></pre>"},{"location":"%E5%85%B6%E5%AE%83/Matplotlib/#_4","title":"\u5f00\u59cb\u7ed8\u56fe","text":""},{"location":"%E5%85%B6%E5%AE%83/Matplotlib/#x-y","title":"\u7c7b\u578b\u4e00\uff1a\u7531\u591a\u4e2a\u5df2\u77e5\u70b9\u7ed8\u5236\u5355\u4e2a\\(x-y\\) \u6298\u7ebf\u56fe","text":""},{"location":"%E5%85%B6%E5%AE%83/Matplotlib/#1","title":"1.\u6b65\u9aa4","text":"<p>\u9996\u5148\u52a0\u5165\u4f60\u8981\u7ed8\u5236\u7684\u70b9\u5750\u6807\u3002 <pre><code># x\u5750\u6807\u8bb0\u5f55\u8bed\u6cd5\u4e3a\uff1a\nx = [a, b, c, d,...]\n# y\u5750\u6807\u8bb0\u5f55\u8bed\u6cd5\u4e3a\uff1a\ny = [A, B, C, D,...]\n</code></pre> \u7136\u540e\u4f7f\u7528<code>plot</code>\u5c06\u70b9\u8ff9\u7a7f\u8d77\u6765\u7ed8\u56fe\u3002 <pre><code># color,marker,linestyle\u53ef\u4ee5\u4e0d\u5199\nplt.plot(x, y, color = '\u7ebf\u6761\u989c\u8272', marker = '\u70b9\u7684\u5f62\u72b6', linestyle = '\u7ebf\u6761\u5f62\u72b6', label = '\u4f60\u60f3\u4e3a\u8fd9\u6761\u66f2\u7ebf\u53d6\u7684\u540d\u5b57')\n</code></pre> \u518d\u4f7f\u7528<code>axis</code>\u9650\u5236\u5750\u6807\u8f74\u8303\u56f4\u3002 <pre><code>plt.axis([x\u8f74\u6700\u5c0f\u503c, x\u8f74\u6700\u5927\u503c, y\u8f74\u6700\u5c0f\u503c, y\u8f74\u6700\u5927\u503c])\n</code></pre> \u63a5\u4e0b\u6765\u4f7f\u7528<code>xlabel</code>\u548c<code>ylabel</code>\u5206\u522b\u4e3ax\u8f74\u548cy\u8f74\u53d6\u540d\uff0c\u7528<code>title</code>\u4e3a\u6574\u4e2a\u66f2\u7ebf\u56fe\u53d6\u6807\u9898\u3002 <pre><code>plt.xlabel('x\u8f74\u7684\u540d\u5b57')\nplt.ylabel('y\u8f74\u7684\u540d\u5b57')\n# \u5728\u5b98\u65b9\u6587\u6863\u91cc\uff0c\u8fd9\u91cc\u4f7f\u7528\u4e86\u53cc\u5f15\u53f7\nplt.title(\"\u4f60\u7684\u6807\u9898\")\n</code></pre> \u6700\u540e\u4f7f\u7528<code>show</code>\u8f93\u51fa\u6298\u7ebf\u56fe\u3002 <pre><code>plt.show()\n</code></pre></p>"},{"location":"%E5%85%B6%E5%AE%83/Matplotlib/#2","title":"2.\u5b8c\u6574\u4ee3\u7801","text":"<pre><code>import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport numpy as np\nx = [a, b, c, d,...]\ny = [A, B, C, D,...]\nplt.plot(x, y, color = '\u7ebf\u6761\u989c\u8272', marker = '\u70b9\u7684\u5f62\u72b6', linestyle = '\u7ebf\u6761\u5f62\u72b6', label = '\u4f60\u60f3\u4e3a\u8fd9\u6761\u66f2\u7ebf\u53d6\u7684\u540d\u5b57')\nplt.axis([x\u8f74\u6700\u5c0f\u503c, x\u8f74\u6700\u5927\u503c, y\u8f74\u6700\u5c0f\u503c, y\u8f74\u6700\u5927\u503c])\nplt.xlabel('x\u8f74\u7684\u540d\u5b57')\nplt.ylabel('y\u8f74\u7684\u540d\u5b57')\n# \u5728\u5b98\u65b9\u6587\u6863\u91cc\uff0c\u4f7f\u7528\u4e86\u53cc\u5f15\u53f7\uff0c\u4e0d\u8981\u641e\u9519\uff01\nplt.title(\"\u4f60\u7684\u6807\u9898\")\nplt.show()\n</code></pre>"},{"location":"%E5%85%B6%E5%AE%83/Matplotlib/#_5","title":"\u7c7b\u578b\u4e8c\uff1a\u7ed8\u5236\u5355\u4e2a\u65e0\u5411\u56fe","text":"<p>\u8fd9\u4e2a\u60f3\u5fc5\u4e0d\u964c\u751f\uff0cFDS\u7684\u62a5\u544a\u91cc\u6574\u4e2a\u56fe\u51fa\u6765<sub>~\u53ef\u663e\u5f97\u9ad8\u7ea7\u4e0d\u5c11\uff08bushi\uff09</sub>~\u3002</p>"},{"location":"%E5%85%B6%E5%AE%83/Matplotlib/#1_1","title":"1.\u6b65\u9aa4","text":"<p>\u9996\u5148\u52a0\u5165\u4f60\u8981\u7ed8\u5236\u7684\u8282\u70b9(<code>nodes</code>)\u548c\u8fb9(<code>edges</code>)\u3002 <pre><code># nodes\u7684\u8bed\u6cd5\u5f88\u7b80\u5355\uff0cnodes = ['\u8282\u70b91', '\u8282\u70b92', '\u8282\u70b93', ...]\nnodes = ['a', 'b', 'c', 'd', ...]\n# edges\u53ea\u662f\u770b\u7740\u590d\u6742\uff0c\u5b9e\u9645\u4e0aedges = [\u8fb91, \u8fb92, \u8fb93, ...]\n# \u800c\u5bf9\u4e8e\u8fb9\u7684\u8868\u793a\uff0c\u82e5\u4e3a\u65e0\u6743\u91cd\uff0c\u5219('a', 'b')\u6216('b', 'a')\uff1b\u82e5\u4e3a\u6709\u6743\u91cd\uff0c\u5219('a', 'b', weight)\nedges = [\n\u00a0 \u00a0 ('a', 'b', weight1),('c', 'd', weight2),...\n]\n</code></pre> \u7136\u540e\u4f7f\u7528<code>Graph</code>\u521b\u5efa\u65e0\u5411\u56fe\u3002 <pre><code>G = nx.Graph() # \u82e5\u4e3a\u65e0\u5411\u56fe\n</code></pre> \u63a5\u7740\u4f7f\u7528<code>add_nodes_from()</code>\u548c<code>add_edges_from()</code>\u6216<code>add_weighted_edges_from</code>\u5c06\u8282\u70b9\u548c\u8fb9\u52a0\u5165\u5230\u56fe\u4e2d\u3002 <pre><code>G.add_nodes_from(nodes)\n# \u82e5\u56fe\u65e0\u6743\u91cd\nG.add_edges_from(edges)\n# \u82e5\u56fe\u6709\u6743\u91cd\nG.add_weighted_edges_from(edges)\n</code></pre></p> <p>\u63a5\u4e0b\u6765\u4f7f\u7528<code>spring_layout()</code>\u3001<code>draw</code>\u4ee5\u53ca<code>draw_networkx_edge_labels</code>\u7ed8\u56fe\u3002</p> <p><pre><code># k\u7684\u542b\u4e49\uff1a\u4ee3\u8868\u5f39\u7c27\u529b\u5e38\u6570\u3002\u8fd9\u4e2a\u503c\u8d8a\u5927\uff0c\u8282\u70b9\u4e4b\u95f4\u7684\u65a5\u529b\u8d8a\u5927\uff0c\u8282\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u4f1a\u8d8a\u5927\u3002\u9ed8\u8ba4\u503c\u662fNone\uff0c\u6b64\u65f6\u4f1a\u6839\u636e\u56fe\u4e2d\u8282\u70b9\u7684\u6570\u91cf\u6765\u8ba1\u7b97\u4e00\u4e2a\u5408\u9002\u7684\u503c\uff0c\u4e00\u822c\u90fd\u76f4\u63a5\u7701\u7565k\u3002\npos = nx.spring_layout(G, k = \u5e03\u5c40\u8c03\u6574\u53c2\u6570)\n'''\ndraw\u7684\u4f5c\u7528\u5c31\u662f\u753b\u51fa\u8fd9\u5e45\u56fe\nG: NetworkX \u56fe\u5bf9\u8c61\uff0c\u5305\u542b\u4e86\u8282\u70b9\u548c\u8fb9\u3002\npos: \u4e00\u4e2a\u5b57\u5178\uff0c\u6307\u5b9a\u4e86\u56fe\u4e2d\u6bcf\u4e2a\u8282\u70b9\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u7531\u521a\u624d\u7684\u5e03\u5c40\u51fd\u6570nx.spring_layout\u8ba1\u7b97\u5f97\u51fa\u3002\nwith_labels: \u5e03\u5c14\u503c\uff0c\u6307\u793a\u662f\u5426\u5728\u8282\u70b9\u65c1\u8fb9\u663e\u793a\u8282\u70b9\u7684\u6807\u7b7e\uff08\u5373\u8282\u70b9\u7684\u540d\u5b57\uff09\u3002\u9ed8\u8ba4\u4e3aFalse\u3002\nnode_size: \u8282\u70b9\u7684\u5927\u5c0f\u3002\u53ef\u4ee5\u662f\u5355\u4e2a\u6570\u503c\uff0c\u4e5f\u53ef\u4ee5\u662f\u8282\u70b9\u5927\u5c0f\u7684\u4e00\u4e2a\u5217\u8868\uff0c\u4e0e\u8282\u70b9\u4e00\u4e00\u5bf9\u5e94\u3002\nnode_color: \u8282\u70b9\u7684\u989c\u8272\u3002\u53ef\u4ee5\u662f\u5355\u4e00\u989c\u8272\uff0c\u4e5f\u53ef\u4ee5\u662f\u8282\u70b9\u989c\u8272\u7684\u4e00\u4e2a\u5217\u8868\uff0c\u4e0e\u8282\u70b9\u4e00\u4e00\u5bf9\u5e94\u3002\nedge_color: \u8fb9\u7684\u989c\u8272\u3002\u53ef\u4ee5\u662f\u5355\u4e00\u989c\u8272\uff0c\u4e5f\u53ef\u4ee5\u662f\u8fb9\u989c\u8272\u7684\u4e00\u4e2a\u5217\u8868\uff0c\u4e0e\u8fb9\u4e00\u4e00\u5bf9\u5e94\u3002\nfont_size: \u8282\u70b9\u6807\u7b7e\u7684\u5b57\u4f53\u5927\u5c0f\u3002\nfont_weight: \u8282\u70b9\u6807\u7b7e\u7684\u5b57\u4f53\u7c97\u7ec6\u3002\n'''\nnx.draw(G, pos, with_labels = True, node_size = \u8282\u70b9\u5927\u5c0f, node_color='\u8282\u70b9\u989c\u8272', edge_color = '\u8fb9\u7684\u989c\u8272', font_size = \u8282\u70b9\u6807\u7b7e\u7684\u5b57\u4f53\u5927\u5c0f, font_weight='\u8282\u70b9\u6807\u7b7e\u7684\u5b57\u4f53\u7c97\u7ec6')\n# \u8fd9\u4e2a\u51fd\u6570\u4e3b\u8981\u662f\u9488\u5bf9\u6709\u6743\u91cd\u7684\u56fe\uff0c\u5c06\u521a\u624d\u7684\u8fb9\u7684\u6743\u91cd\u52a0\u5165\u5230\u96c6\u5408edge_labels\u4e2d\nedge_labels = nx.get_edge_attributes(G, 'weight')\n# \u7ed8\u5236\u8fb9\u7684\u6743\u91cd\nnx.draw_networkx_edge_labels(G, pos, edge_labels = edge_labels)\n</code></pre> \u6700\u540e\u4f7f\u7528<code>show</code>\u8f93\u51fa\u65e0\u5411\u56fe <pre><code># \u8fd9\u4e2a\u64cd\u4f5c\u662f\u4e3a\u4e86\u4e0d\u663e\u793a\u5750\u6807\u8f74\nplt.axis('off')\n# \u8f93\u51fa\u65e0\u5411\u56fe\nplt.show()\n</code></pre></p>"},{"location":"%E5%85%B6%E5%AE%83/Matplotlib/#2_1","title":"2.\u5b8c\u6574\u4ee3\u7801\uff08\u4ee5\u52a0\u6743\u56fe\u4e3a\u4f8b\uff09","text":"<pre><code>nodes = ['a', 'b', 'c', 'd', ...]\nedges = [\n\u00a0 \u00a0 ('a', 'b', weight1),('c', 'd', weight2),...\n]\n\nG = nx.Graph()\nG.add_nodes_from(nodes)\nG.add_weighted_edges_from(edges) # \u6b64\u5904\u5c55\u793a\u6709\u6743\u91cd\u7684\u60c5\u51b5\uff0c\u6bd5\u7adf\u8fd9\u79cd\u60c5\u51b5\u51fa\u73b0\u66f4\u591a\n\npos = nx.spring_layout(G, k = \u5e03\u5c40\u8c03\u6574\u53c2\u6570)\n\nnx.draw(G, pos, with_labels = True, node_size = \u8282\u70b9\u5927\u5c0f, node_color='\u8282\u70b9\u989c\u8272', edge_color = '\u8fb9\u7684\u989c\u8272', font_size = \u8282\u70b9\u6807\u7b7e\u7684\u5b57\u4f53\u5927\u5c0f, font_weight='\u8282\u70b9\u6807\u7b7e\u7684\u5b57\u4f53\u7c97\u7ec6')\nedge_labels = nx.get_edge_attributes(G, 'weight')\nnx.draw_networkx_edge_labels(G, pos, edge_labels)\n\nplt.axis('off')\nplt.show()\n</code></pre>"},{"location":"%E5%85%B6%E5%AE%83/Matplotlib/#_6","title":"\u7c7b\u578b\u4e09\uff1a\u7ed8\u5236\u5355\u4e2a\u6709\u5411\u56fe","text":"<p>\u8fd9\u4e2a\u548c\u4e0a\u9762\u90a3\u4e2a\u7c7b\u4f3c\uff0c\u8fd9\u91cc\u91c7\u53d6\u5206\u5f00\u753b\u7684\u65b9\u6cd5\uff0c\u7528\u591a\u4e2a<code>draw</code>\u76f8\u5173\u7684\u51fd\u6570\u5b8c\u6210\uff0c\u800c\u4e0a\u8ff0\u76f4\u63a5\u7528<code>draw</code>\u5b8c\u6210\u3002</p>"},{"location":"%E5%85%B6%E5%AE%83/Matplotlib/#1_2","title":"1.\u6b65\u9aa4","text":"<p>\u9996\u5148\u8fd8\u662f\u52a0\u5165\u4f60\u8981\u7ed8\u5236\u7684\u8282\u70b9(<code>nodes</code>)\u548c\u8fb9(<code>edges</code>)\u3002</p> <pre><code>nodes = ['a', 'b', 'c', 'd', ...]\n# \u5982\u679c\u662f\u65e0\u6743\u56fe\nedges = [\n\u00a0 \u00a0 ('a', 'b'),('c', 'd'),...\n]\n# \u5982\u679c\u662f\u52a0\u6743\u56fe\nedges = [\n\u00a0 \u00a0 ('a', 'b', weight1),('c', 'd', weight2),...\n]\n</code></pre> <p>\u7136\u540e<code>DiGraph()</code>\u521b\u5efa\u6709\u5411\u56fe\u3002</p> <pre><code>G = nx.DiGraph()\n</code></pre> <p>\u63a5\u4e0b\u6765\u4f7f\u7528<code>add_nodes_from</code>\u548c<code>add_edges_from</code>\u6765\u5c06\u8fb9\u548c\u8282\u70b9\u52a0\u5165\u56fe\u4e2d\u3002</p> <pre><code>G.add_nodes_from(nodes)\n# \u56fe\u65e0\u6743\u91cd\nG.add_edges_from(edges)\n#\u56fe\u6709\u6743\u91cd\nG.add_weighted_edges_from(edges)\n</code></pre> <p>\u518d\u4f7f\u7528<code>draw_networkx_nodes</code>\u3001<code>draw_networkx_edges</code>\u548c<code>draw_network_labels</code>\u7b49\u7ed8\u5236\u56fe\u3002</p> <pre><code>pos = nx.spring_layout(G, k = \u5e03\u5c40\u8c03\u6574\u53c2\u6570)\n# \u7ed8\u5236\u8282\u70b9\nG.draw_networkx_nodes(G, pos, node_size = \u8282\u70b9\u5927\u5c0f, node_color = '\u8282\u70b9\u989c\u8272')\n# \u7ed8\u5236\u8fb9\nG.draw_networkx_edges(G, pos, width = \u5bbd\u5ea6\u503c, edge_color = '\u8fb9\u7684\u989c\u8272', alpha = \u900f\u660e\u5ea6\u503c)\n# \u7ed9\u8282\u70b9\u7ed8\u5236\u6807\u7b7e\nG.draw_networkx_labels(G, pos)\n# \u5982\u679c\u662f\u52a0\u6743\u7684\uff0c\u8fd8\u9700\u8981\u4ee5\u4e0b\u90e8\u5206\u6765\u753b\u4e0a\u6743\u91cd\n# `edge_labels`\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u5176\u4e2d\u952e\u662f\u8fb9\u7684\u5143\u7ec4\u00a0`(u, v)`\uff0c\u503c\u662f\u8be5\u8fb9\u4e0a\u00a0`'weight'`\u00a0\u5c5e\u6027\u7684\u503c\u3002\u8fd9\u786e\u4fdd\u4e86\u53ea\u6709\u6743\u91cd\u503c\u88ab\u7528\u4f5c\u8fb9\u6807\u7b7e\u3002`G.edges(data=True)`\u00a0\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u8fb9\u7684\u6570\u636e\u548c\u5c5e\u6027\u7684\u8fed\u4ee3\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4ece\u4e2d\u63d0\u53d6\u51fa\u6743\u91cd\u503c\u3002\nedge_labels = {(u, v): d['weight'] for u, v, d in G.edges(data=True)}\nG.draw_networkx_edge_labels(G, pos, edge_labels = edge_labels)\n</code></pre> <p>\u6700\u540e\u4f7f\u7528<code>show</code>\u8f93\u51fa\u6709\u5411\u56fe</p> <pre><code>plt.axis('off')\nplt.show()\n</code></pre>"},{"location":"%E5%85%B6%E5%AE%83/Matplotlib/#2_2","title":"2.\u5b8c\u6574\u4ee3\u7801(\u4ee5\u52a0\u6743\u56fe\u4e3a\u4f8b)","text":"<pre><code>nodes = ['a', 'b', 'c', 'd', ...]\nedges = [\n\u00a0 \u00a0 ('a', 'b', weight1),('c', 'd', weight2),...\n]\n\nG = nx.DiGraph()\n\nG.add_nodes_from(nodes)\nG.add_weighted_edges_from(edges)\n\npos = nx.spring_layout(G, k = \u5e03\u5c40\u8c03\u6574\u53c2\u6570)\nG.draw_networkx_nodes(G, pos, node_size = \u8282\u70b9\u5927\u5c0f, node_color = '\u8282\u70b9\u989c\u8272')\nG.draw_networkx_edges(G, pos, width = \u5bbd\u5ea6\u503c, edge_color = '\u8fb9\u7684\u989c\u8272', alpha = \u900f\u660e\u5ea6\u503c)\nG.draw_networkx_labels(G, pos)\nedge_labels = nx.get_edge_attributes(G, 'weight')\nG.draw_networkx_edge_labels(G, pos, edge_labels)\n\nplt.axis('off')\nplt.show()\n</code></pre>"},{"location":"%E5%85%B6%E5%AE%83/Matplotlib/#nx-y","title":"\u7c7b\u578b\u56db\uff1a\u7531\u591a\u4e2a\u5df2\u77e5\u70b9\u751f\u6210\u62df\u5408n\u9636\u591a\u9879\u5f0f\u7684\u5355\u4e2ax-y\u56fe","text":"<p>\u8fd9\u4e00\u6b65\u663e\u793a\u6563\u70b9\u56fe\u3002</p> <pre><code> plt.scatter(x, y)\n</code></pre> <p>\u548c\u7c7b\u578b\u4e00\u5927\u90e8\u5206\u64cd\u4f5c\u76f8\u540c\uff0c\u5173\u952e\u6b65\u9aa4\u5728\u4e8e\u62df\u5408\u3002</p> <pre><code># \u7531polyfit\u51fd\u6570\u751f\u6210\u4e00\u4e2an\u9636\u591a\u9879\u5f0f\u6a21\u578b\nmodel = np.polyfit(x, y, \u9700\u8981\u62df\u5408\u7684\u9636\u6570n)\n# \u7531poly1d\u51fd\u6570\u5c06\u8be5\u6a21\u578b\u8f6c\u5316\u4e3a\u4e00\u4e2a\u51fd\u6570\uff0c\u8bb0\u4e3af_model\n# f_model\u76f8\u5f53\u4e8e\u5c31\u662f\u62df\u5408\u51fa\u7684\u89e3\u6790\u5f0f\uff0c\u5e26\u5165x\u5c31\u5f97\u5230y\u4e86\nf_model = np.poly1d(model)\nplt.plot(x, f_model(x))\n</code></pre>"},{"location":"%E5%85%B6%E5%AE%83/Web/","title":"Web","text":""},{"location":"%E5%85%B6%E5%AE%83/Web/#ip","title":"IP","text":""},{"location":"%E5%85%B6%E5%AE%83/Web/#ipv4","title":"IPv4","text":"<p>4\u4e2a\u6bb5\uff0c\u6bcf\u4e2a\u6bb58\u4f4d\uff0c32\u4f4d\u6574\u6570\u8868\u793aIPv4\uff08\u5730\u5740\u5df2\u8017\u5c3d\uff09 \u7406\u8bba\u4e0a\u67092^32\u4e2a\u5730\u5740\uff0c\u4f46\u4e0d\u662f\u6240\u6709\u90fd\u53ef\u4ee5\u4f7f\u7528</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#ipv6","title":"IPv6","text":"<p>8\u4e2a\u6bb5\uff0c\u6bcf\u6bb516\u4f4d \u7b80\u5316\u4e86IPv4\u5b58\u5728\u7684\u5730\u5740\u5206\u914d\u95ee\u9898 2001:da8:e000:731a:ff00:0:0:642d \u51680\u6bb5\u53ef\u4ee5\u7701\u7565\u4e3a::</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#_1","title":"\u5e7f\u57df\u7f51\u4e0e\u5c40\u57df\u7f51","text":""},{"location":"%E5%85%B6%E5%AE%83/Web/#_2","title":"\u5e7f\u57df\u7f51","text":"<p>\u8de8\u8d8a\u5927\u8303\u56f4\u7684\u7f51\u7edc\uff0c\u5982\u4e92\u8054\u7f51</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#_3","title":"\u5c40\u57df\u7f51","text":"<p>\u5c0f\u8303\u56f4\u7684\u7f51\u7edc \u5c40\u57df\u7f51\u4e4b\u95f4\u7684\u4e3b\u673a\u53ef\u4ee5\u4e92\u76f8\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u4e92\u8054\u7f51 \u4e00\u53f0\u4e3b\u673a\u53ef\u4ee5\u6709\u591a\u4e2aIP \u4e00\u4e2a\u4e3b\u673a\u53ef\u4ee5\u6709\u591a\u4e2a\u7f51\u5361\uff0c\u6bcf\u4e2a\u7f51\u5361\u53ef\u4ee5\u6709\u591a\u4e2aIP\u5730\u5740</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#_4","title":"\u56de\u73af\u5730\u5740","text":"<p>\u6307\u5411\u81ea\u8eab 127.0.0.1/::1/loaclhost</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#_5","title":"\u7f51\u5173","text":"<p>\u5c06\u4e0d\u540c\u7f51\u7edc\u8fde\u63a5\u8d77\u6765\u7684\u8bbe\u5907 \u4f8b\u5982\u94fe\u63a5\u5c40\u57df\u7f51\u548c\u4e92\u8054\u7f51\u7684\u8def\u7531\u5668 \u5c40\u57df\u7f51\u5185\u4e3b\u673a\u7f51\u5173\u662f\u8def\u7531\u5668\u7684IP\u5730\u5740</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#ipip","title":"\u5b50\u7f51\uff1a\u5c06\u4e00\u4e2a\u5927\u7684IP\u5730\u5740\u6bb5\u5212\u5206\u4e3a\u591a\u4e2a\u5c0f\u7684IP\u5730\u5740","text":"<p>\u5b50\u7f51\u63a9\u7801\u7528\u4e8e\u5224\u65ad\u4e24\u4e2aIP\u5730\u5740\u662f\u5426\u5728\u4e00\u4e2a\u5b50\u7f51\u5185</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#nat","title":"NAT\uff1a\u7f51\u7edc\u5730\u5740\u8f6c\u6362","text":"<p>\u5c06\u5c40\u57df\u7f51\u5185\u7684\u591a\u4e2a\u4e3b\u673a\u5171\u4eab\u540c\u4e00\u4e2a\u516c\u7f51IP\u5730\u5740</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#tcp-udp","title":"\u4f20\u8f93\u5c42\u534f\u8baeTCP &amp; UDP","text":""},{"location":"%E5%85%B6%E5%AE%83/Web/#osi-tcpip","title":"OSI\u4e03\u5c42\u6a21\u578b &amp; TCP/IP\u56db\u5c42\u6a21\u578b","text":""},{"location":"%E5%85%B6%E5%AE%83/Web/#osi","title":"OSI\u4e03\u5c42\u6a21\u578b","text":"<ol> <li>\u7269\u7406\u5c42\uff1a\u8d1f\u8d23\u4f20\u8f93\u539f\u59cb\u6bd4\u7279\u6d41\uff0c\u901a\u8fc7\u7269\u7406\u5a92\u4ecb\u5b9e\u73b0\u8bbe\u5907\u4e4b\u95f4\u7684\u901a\u4fe1\u3002</li> <li>\u6570\u636e\u94fe\u8def\u5c42\uff1a\u5728\u76f8\u90bb\u8282\u70b9\u4e4b\u95f4\u63d0\u4f9b\u6570\u636e\u4f20\u8f93\u7684\u529f\u80fd\uff0c\u8d1f\u8d23\u5e27\u7684\u4f20\u8f93\u548c\u9519\u8bef\u68c0\u6d4b\u3002</li> <li>\u7f51\u7edc\u5c42\uff1a\u8d1f\u8d23\u6570\u636e\u5305\u4ece\u6e90\u5230\u76ee\u7684\u5730\u7684\u4f20\u8f93\u548c\u8def\u7531\u9009\u62e9\uff0c\u901a\u8fc7\u903b\u8f91\u5730\u5740\u5bfb\u5740\u3002</li> <li>\u4f20\u8f93\u5c42\uff1a\u63d0\u4f9b\u7aef\u5230\u7aef\u7684\u6570\u636e\u4f20\u8f93\u670d\u52a1\uff0c\u786e\u4fdd\u6570\u636e\u7684\u6b63\u786e\u6027\u548c\u6709\u6548\u6027\u3002</li> <li>\u4f1a\u8bdd\u5c42\uff1a\u8d1f\u8d23\u5efa\u7acb\u3001\u7ba1\u7406\u548c\u7ec8\u6b62\u4f1a\u8bdd\uff0c\u5b9e\u73b0\u4e0d\u540c\u5e94\u7528\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u3002</li> <li>\u8868\u793a\u5c42\uff1a\u786e\u4fdd\u6570\u636e\u5728\u7f51\u7edc\u4e2d\u4f20\u8f93\u524d\u540e\u7684\u8868\u793a\u683c\u5f0f\u4e00\u81f4\uff0c\u5982\u52a0\u5bc6\u3001\u538b\u7f29\u548c\u5b57\u7b26\u7f16\u7801\u3002</li> <li>\u5e94\u7528\u5c42\uff1a\u4e3a\u5e94\u7528\u8f6f\u4ef6\u63d0\u4f9b\u7f51\u7edc\u670d\u52a1\uff0c\u662f\u7528\u6237\u4e0e\u7f51\u7edc\u7684\u63a5\u53e3\u3002</li> </ol>"},{"location":"%E5%85%B6%E5%AE%83/Web/#tcpip","title":"TCP/IP\u56db\u5c42\u6a21\u578b","text":"<ol> <li>\u7f51\u7edc\u63a5\u53e3\u5c42\uff1a\u5bf9\u5e94OSI\u6a21\u578b\u7684\u7269\u7406\u5c42\u548c\u6570\u636e\u94fe\u8def\u5c42\uff0c\u8d1f\u8d23\u6570\u636e\u7684\u7269\u7406\u4f20\u8f93\u3002</li> <li>\u4e92\u8054\u7f51\u5c42\uff1a\u5bf9\u5e94OSI\u6a21\u578b\u7684\u7f51\u7edc\u5c42\uff0c\u8d1f\u8d23\u6570\u636e\u5305\u7684\u8def\u7531\u548c\u4f20\u8f93\uff0c\u4e3b\u8981\u534f\u8bae\u4e3aIP\u3002</li> <li>\u4f20\u8f93\u5c42\uff1a\u5bf9\u5e94OSI\u6a21\u578b\u7684\u4f20\u8f93\u5c42\uff0c\u8d1f\u8d23\u63d0\u4f9b\u7aef\u5230\u7aef\u7684\u901a\u4fe1\u670d\u52a1\uff0c\u4e3b\u8981\u534f\u8bae\u4e3aTCP\u548cUDP\u3002</li> <li>\u5e94\u7528\u5c42\uff1a\u6db5\u76d6\u4e86OSI\u6a21\u578b\u7684\u4f1a\u8bdd\u5c42\u3001\u8868\u793a\u5c42\u548c\u5e94\u7528\u5c42\uff0c\u8d1f\u8d23\u5904\u7406\u9ad8\u7ea7\u5e94\u7528\u7a0b\u5e8f\u95f4\u7684\u901a\u4fe1\u3002</li> </ol>"},{"location":"%E5%85%B6%E5%AE%83/Web/#tcp","title":"TCP\uff1a\u4f20\u8f93\u63a7\u5236\u534f\u8bae","text":"<p>\u9762\u5411\u8fde\u63a5\u7684\u534f\u8bae \u4fdd\u8bc1\u6570\u636e\u80fd\u4f20\u5230\uff08\u6216\u62a5\u9519\uff09</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#udp","title":"UDP\uff1a\u7528\u6237\u6570\u636e\u62a5\u534f\u8bae","text":"<p>\u65e0\u8fde\u63a5 \u5355\u5411\u4f20\u8f93\uff0c\u4e0d\u4fdd\u8bc1\u987a\u5e8f\uff0c\u4e0d\u4fdd\u8bc1\u53ef\u9760\u6027</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#_6","title":"\u7aef\u53e3","text":"<p>\u7aef\u53e3\u53f7\u8303\u56f40-65535 0-1023\u4e3a\u7cfb\u7edf\u4fdd\u7559\u7aef\u53e3\uff0c\u4e00\u822c\u4e0d\u7528\u4e8e\u901a\u4fe1\u670d\u52a1 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e0d\u540c\u8f6f\u4ef6\u4f7f\u7528\u4e0d\u540c\u7684\u7aef\u53e3\u53f7</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#dns","title":"\u57df\u540d\u7cfb\u7edf\u548cDNS","text":""},{"location":"%E5%85%B6%E5%AE%83/Web/#_7","title":"\u57df\u540d","text":"<p>\u6807\u8bc6\u4e92\u8054\u7f51\u4e0a\u7684\u8ba1\u7b97\u673a \u6700\u53f3\u4fa7\u4e3a\u9876\u7ea7\u57df\u540d\uff1a.com .top .net .org\u7b49 \u4ece\u53f3\u81f3\u5de6\u4ee5\u6b64\u4e3a\u4e8c\u7ea7\u3001\u4e09\u7ea7\u57df\u540d\u7b49\uff1awww.example.com \u53ef\u4ee5\u8bbe\u7f6e\u4efb\u610f\u591a\u7684\u5b50\u57df\u540d</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#dns_1","title":"DNS\u8bb0\u5f55","text":"<p>\u57df\u540d\u4e0b\u9762\u53ef\u4ee5\u6709\u4efb\u610f\u591a\u6761DNS\u8bb0\u5f55 \u8bb0\u5f55\u4e86\u5982\u4f55\u5904\u7406\u5bf9\u57df\u540d\u7684\u8bf7\u6c42 \u5c06\u57df\u540d\u6620\u5c04\u5230IPv4\u7684\u8bb0\u5f55\u79f0\u4e3aA\u8bb0\u5f55 \u8fd8\u6709AAAA\uff08IPv6\uff09\u3001MX\uff08\u90ae\u7bb1\uff09\u3001CNAME\uff08\u522b\u540d\uff09\u3001TXT\uff08\u6587\u672c\u4fe1\u606f\uff09\u7b49 TTL\uff08Time To Live\uff09\u8868\u793a\u8be5\u8bb0\u5f55\u7684\u7f13\u5b58\u65f6\u95f4</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#dns_2","title":"DNS\u670d\u52a1\u5668","text":"<p>\u8bbf\u95ee\u4e00\u4e2a\u57df\u540d\u65f6\uff0c\u8ba1\u7b97\u673a\u56de\u60f3DNS\u670d\u52a1\u5668\u67e5\u8be2\u57df\u540d\u5bf9\u5e94\u7684DNS\u8bb0\u5f55 \u4e00\u822c\u6765\u8bf4\uff0c\u6709\u53ef\u80fd\u4f1a\u5411\u5176\u4ed6DNS\u670d\u52a1\u5668\u67e5\u8be2\uff0c\u76f4\u5230\u627e\u5230\u6240\u9700\u8bb0\u5f55 DNS\u7684\u5206\u914d\u7aef\u53e3\u4e3aTCP/UDP 53</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#http","title":"\u5e94\u7528\u5c42\u534f\u8baeHTTP","text":"<p>\u57fa\u4e8e\u6587\u672c\u7684\u534f\u8bae\uff0c\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u4f20\u8f93\u7f51\u9875</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#-cs","title":"\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u67b6\u6784\uff08C/S\uff09","text":"<p>\u53d1\u8d77\u8fde\u63a5\u7684\u8282\u70b9\u4e3a\u5ba2\u6237\u7aef\uff0c\u63a5\u53d7\u8fde\u63a5\u7684\u8282\u70b9\u4e3a\u670d\u52a1\u5668\uff0c\u670d\u52a1\u5668\u4e0d\u80fd\u4e3b\u52a8\u53d1\u8d77\u8fde\u63a5 \u670d\u52a1\u5668\u4e0d\u4e00\u5b9a\u53ea\u80fd\u5904\u7406HTTP\u8981\u6c42\uff08\u6bd4\u5982DNS\u670d\u52a1\u5668\uff09 \u670d\u52a1\u5668\u53ef\u4ee5\u540c\u65f6\u5904\u7406\u591a\u4e2a\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\uff0c\u5ba2\u6237\u7aef\u5728\u672c\u5730\u9009\u53d6\u4e00\u4e2a\u7a7a\u95f2\u7684\u9ad8\u7aef\u53e3\u53f7\uff0c\u8fde\u63a5\u5230\u670d\u52a1\u5668\u768480\u7aef\u53e3</p> \\[ client:49152 \\leftrightarrow server:80 \\]"},{"location":"%E5%85%B6%E5%AE%83/Web/#dos","title":"DoS\u653b\u51fb\uff1a","text":"<p>\u901a\u8fc7\u5927\u91cf\u8f93\u5165\u65e0\u6548\u4fe1\u606f\u523080\u7aef\u53e3</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#ddos","title":"DDoS\u653b\u51fb\uff1a","text":"<p>\u201c\u5206\u5e03\u5f0f\u62d2\u7edd\u670d\u52a1\u653b\u51fb\u201d\uff0c\u63a7\u5236\u5927\u91cf\u7684\u8ba1\u7b97\u673a\uff0c\u540c\u65f6\u5411\u76ee\u6807\u53d1\u9001\u5927\u91cf\u7684\u8bf7\u6c42</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#url","title":"URL\uff1a\u7edf\u4e00\u8d44\u6e90\u5b9a\u4f4d\u7b26","text":"<p>\u56fe\uff1f URI\u7684\u4e00\u79cd\uff0c\u7528\u4e8e\u5b9a\u4f4d\u4e92\u8054\u7f51\u4e0a\u7684\u8d44\u6e90 URL\u53ea\u80fd\u5305\u542bASCII\u5b57\u7b26</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#http_1","title":"HTTP \u8bf7\u6c42\u65b9\u6cd5","text":"<p>nc \u57df\u540d 80 GET xxxxxxxxx HTTP/1.x HTTP/1.x \u8bf7\u6c42\u7684\u7b2c\u4e00\u884c\u7531\u8bf7\u6c42\u65b9\u6cd5\u3001\u8def\u5f84\u7b49\u7ec4\u6210\uff0c\u662f\u57fa\u4e8eTCP\u7684\u6587\u672c\u534f\u8bae HTTP/2 \u57fa\u4e8eTCP\u7684\u4e8c\u8fdb\u5236\u534f\u8bae\uff0c\u4e0d\u518d\u4eba\u7c7b\u53ef\u8bfb\uff0c\u6027\u80fd\u66f4\u9ad8 HTTP/3 \u57fa\u4e8eQUIC\u534f\u8bae\uff0c\u629b\u5f03TCP\uff0c\u5efa\u7acb\u5728UDP\u4e4b\u4e0a\uff0c\u901a\u8fc7\u5176\u4ed6\u624b\u6bb5\u89e3\u51b3UDP\u4e0d\u53ef\u9760\u6027 GET \u83b7\u53d6\u8d44\u6e90 POST \u7528\u4e8e\u63d0\u4ea4\u6570\u636e PUT \u66f4\u65b0\u8d44\u6e90</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#_8","title":"\u6807\u5934\u3001\u8bf7\u6c42\u4f53\u3001\u54cd\u5e94\u4f53","text":"<p>\u6807\u5934\u662f\u7531\u952e\u503c\u5bf9\u7ec4\u6210\u7684\u6587\u672c \u5192\u53f7\u5206\u9694\u952e\u4e0e\u503c</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#web","title":"Web\u4e09\u5251\u5ba2","text":"<ul> <li>HTML\uff1a \u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00\uff08\u662f\u6807\u8bb0\u8bed\u8a00\uff0c\u4e0d\u662f\u7f16\u7a0b\u8bed\u8a00\uff09</li> <li>JavaScript\uff1a \u662f\u7f16\u7a0b\u8bed\u8a00\uff0c\u4e0eJava\u6ca1\u5565\u5173\u7cfb\uff0c\u4e5f\u53ef\u7528\u4e8e\u901a\u7528\u7f16\u7a0b\uff1aNode.js \u7528\u4e8e\u5b9e\u73b0\u7f51\u9875\u7684\u4ea4\u4e92\u529f\u80fd\uff0c\u7531<code>&lt;script&gt;</code>\u6807\u7b7e\u5f15\u5165</li> <li>CSS\uff1a \u5c42\u53e0\u6837\u5f0f\u8868\uff08\u662f\u6837\u5f0f\u8868\u8bed\u8a00\uff09 \u63cf\u8ff0\u6837\u5f0f\u3001\u5e03\u5c40\u3001\u89c6\u89c9\u6548\u679c\u548c\u5448\u73b0\u65b9\u5f0f\uff0c\u4ec5\u7528CSS\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u975e\u5e38\u590d\u6742\u7684\u52a8\u753b\u6548\u679c CSS\u9009\u62e9\u5668\uff1a\u89c4\u5b9a\u4e86CSS\u89c4\u5219\u4f1a\u88ab\u5e94\u7528\u5230\u54ea\u4e9b\u5143\u7d20\u4e0a</li> </ul>"},{"location":"%E5%85%B6%E5%AE%83/Web/#_9","title":"\u642d\u5efa\u7f51\u7ad9","text":"<ul> <li>\u9759\u6001\u7f51\u9875\uff1a\u5b8c\u5168\u201c\u6309\u539f\u6837\u201d\u5448\u73b0\u7ed9\u6d4f\u89c8\u5668\u7684\u7f51\u9875 \u9759\u6001\u7f51\u9875\u6258\u7ba1\u670d\u52a1\u6bd4\u5982GitHub Pages\u7b49\uff0c\u6784\u5efa\u7528\u6237\u754c\u9762\u7684\u5e93\u6bd4\u5982Tailwind CSS\u3001Vue.js\u7b49\uff0c\u9759\u6001\u7f51\u9875/\u535a\u5ba2\u751f\u6210\u5668\u6bd4\u5982Hexo\u3001MkDocs\u7b49</li> <li>\u52a8\u6001\u7f51\u9875\uff1a\u6839\u636e\u7528\u6237\u7684\u8bf7\u6c42\u52a8\u6001\u751f\u6210\u5185\u5bb9\u7684\u7f51\u9875 wordpress\u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf</li> </ul>"},{"location":"%E5%85%B6%E5%AE%83/Web/#https","title":"HTTPS","text":""},{"location":"%E5%85%B6%E5%AE%83/Web/#httphttps","title":"HTTP\u4e0eHTTPS","text":"<p>HTTP\u4e2d\u4e00\u5207\u90fd\u662f\u660e\u6587\u4f20\u8f93\uff0c\u4e24\u8282\u70b9\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u4e2d\u95f4\u8282\u70b9\u90fd\u53ef\u4ee5\u7a83\u542c\u5e76\u5e72\u6270\u901a\u4fe1\u5185\u5bb9 HTTPS\uff08HTTP over TLS\uff09 \u4f20\u8f93\u5c42\u5b89\u5168\u534f\u8bae\uff08TLS\uff09,\u65e7\u79f0\u5b89\u5168\u5957\u63a5\u5c42\uff08SSL\uff09</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#_10","title":"\u901a\u4fe1\u5b89\u5168","text":""},{"location":"%E5%85%B6%E5%AE%83/Web/#_11","title":"\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\uff1a","text":"<p>\u5982AES\u3001ChaCha20\u7b49</p> <p>Diffie-Hellman\u5bc6\u94a5\u4ea4\u6362\uff1a \u4e0d\u80fd\u89e3\u51b3\u4e2d\u95f4\u4eba\u653b\u51fb\uff1aE\u4f5c\u4e3a\u4e2d\u95f4\u4eba\uff0c\u201c\u4e24\u8fb9\u9a97\u201d\uff08\u56fd\u5185\u65e0\u6cd5\u8bbf\u95ee\u7684\u7f51\u7ad9\u5c31\u662f\u4f9d\u636e\u6b64\uff0c\u4f20\u7ed9\u4f60\u4e00\u4e9b\u865a\u4fe1\u606f\u5bfc\u81f4\u4f60\u65e0\u6cd5\u8bbf\u95ee\uff09 $$ A \\longleftrightarrow B  $$ $$ A \\longleftrightarrow E \\longleftrightarrow B $$</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#_12","title":"\u975e\u5bf9\u79f0\u5bc6\u7801\u5b66\uff1a","text":"<p>RSA\u516c\u94a5\u5bc6\u7801\u5b66\uff1a \u57fa\u4e8e\u6570\u5b66\u5047\u8bbe\uff1a\u5927\u6574\u6570\u7684\u56e0\u5f0f\u5206\u89e3\u662f\u56f0\u96be\u7684\uff08\u7ed9\u5b9a\u5927\u8d28\u6570p\u548cq\uff0c\u8ba1\u7b97pq\u5f88\u5bb9\u6613\u4f46\u53cd\u5411\u5206\u89e3\u51fa\u5374\u5f88\u56f0\u96be\uff09 ECC\u692d\u5706\u66f2\u7ebf\u5bc6\u7801\u5b66\uff1a \u57fa\u4e8e\u692d\u5706\u66f2\u7ebf\u4e0a\u7684\u79bb\u6563\u5bf9\u6570\u95ee\u9898\u3002 \u76f8\u6bd4RSA\uff0cECC\u80fd\u5728\u66f4\u77ed\u7684\u5bc6\u94a5\u957f\u5ea6\u4e0b\u63d0\u4f9b\u76f8\u540c\u7684\u5b89\u5168\u6027\u3002 \u540e\u91cf\u5b50\u5bc6\u7801\u5b66\uff1a\u57fa\u4e8e\u683c\u3001\u54c8\u5e0c\u51fd\u6570\u3001\u4ee3\u7801\u7b49\u6784\u5efa\u7684\u5bc6\u7801\u5b66\uff08\u524d\u6cbf\uff09</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#tlsca","title":"TLS\u8bc1\u4e66\u4e0eCA","text":"<p>\u8bc1\u4e66\uff1a\u6570\u5b57\u7b7e\u540d\u7684\u516c\u94a5\uff0c\u6709\u4e00\u4e2a\u53cc\u65b9\u90fd\u76f8\u4fe1\u7684\u7b2c\u4e09\u8005CA\u7b7e\u53d1\uff0cCA\u901a\u8fc7\u5176\u4ed6\u624b\u6bb5\u9a8c\u8bc1B\u8eab\u4efd\uff0c\u7b7e\u53d1B\u7684\u8bc1\u4e66\uff0cA\u4fe1\u4efbCA\uff0c\u90a3\u4e48\u4ed6\u4e5f\u5c31\u4fe1\u4efbB\u7684\u8bc1\u4e66\uff0c\u8fdb\u800c\u4fe1\u4efbB</p> <p>\u5982\u4f55\u786e\u4fddCA\u53ef\u4fe1\uff1f \u6839\u8bc1\u4e66\uff0c\u7ea6150\u4e2a\uff08\u6839\u8bc1\u4e66\u662f\u81ea\u7b7e\u540d\u7684\u4e14\u88ab\u4fe1\u4efb\u3002\uff09</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#mtls","title":"mTLS","text":"<p>\u4e00\u822c\u670d\u52a1\u5668\u9700\u8981\u5411\u5ba2\u6237\u7aef\u8bc1\u660e\u81ea\u5df1\uff0c\u800c\u6709\u65f6\u5ba2\u6237\u7aef\u4e5f\u9700\u8981\u5411\u670d\u52a1\u5668\u8bc1\u660e\u81ea\u5df1</p>"},{"location":"%E5%85%B6%E5%AE%83/Web/#proxy","title":"\u4ee3\u7406 PROXY","text":"<p>\u6b63\u5411\u4ee3\u7406\uff1a VPN\uff1aVirtual Private Network</p> <p>\u53cd\u5411\u4ee3\u7406</p>"},{"location":"%E5%85%B6%E5%AE%83/anaconda%E5%8A%A0%E5%85%A5%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/","title":"Anaconda\u52a0\u5165\u73af\u5883\u53d8\u91cf","text":"<p>\u4eca\u5929\u9f13\u6363\u4e86\u4e00\u4e0b\uff0c\u4ee5\u540e\u5c31\u61d2\u5f97\u548cpython\u6253\u66f4\u591a\u4ea4\u9053\u4e86 emmm\uff0c\u6b65\u9aa4\u5012\u662f\u975e\u5e38\u7b80\u5355 \u8bbe\u7f6e &gt; \u7f16\u8f91\u7cfb\u7edf\u7684\u73af\u5883\u53d8\u91cf &gt; \u73af\u5883\u53d8\u91cf  \u7136\u540e\u561e\uff0cPATH &gt;  \u7f16\u8f91  \u4e3b\u8981\u662f\u8981\u52a0\u5165\u7684\u4e1c\u897f\uff1a - ...... \\Anaconda - ......\\Anaconda\\Library\\mingw-w64\\bin - ......\\Anaconda\\Library\\usr\\bin - ......\\Anaconda\\Library\\bin - ......\\Anaconda\\Scripts \u8fd9\u4e94\u4e2a\u52a0\u4e86\u5c31\u5bf9\u4e86</p>"},{"location":"%E5%85%B6%E5%AE%83/unfinished/","title":"Unfinished","text":"<p>\u8fd9\u4eba\u5f88\u61d2\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u60f3\u505a\u3002</p>"},{"location":"%E5%86%99%E4%BD%9C/latex/","title":"How to Start Writing in LaTeX","text":"<p>\u8fd9\u662f\u4e00\u7bc7\u7b80\u77ed\u7684\u7b14\u8bb0\uff0c\u662f\u6211\u5728\u4e4b\u524d\u7684\u8bfe\u7a0b\u4e2d\u5173\u4e8e\u8f85\u5b66lec4-latex\u7684\u8bfe\u7a0b\u6536\u83b7\u3002</p>"},{"location":"%E5%86%99%E4%BD%9C/latex/#_1","title":"\u4e00\u3001\u6587\u7ae0\u7ed3\u6784","text":"<ul> <li> <p>\u6587\u6863\u7c7b\u578b\u58f0\u660e <code>\\documentclass{&lt;type&gt;}</code> </p> </li> <li> <p>\u5bfc\u8a00\u533a  </p> </li> <li>title &amp; author &amp; date <code>\\title</code>\u4ee3\u8868\u6807\u9898\uff0c\u7528\u6cd5\uff1a<code>\\title{&lt;the title of the article&gt;}</code> <code>\\author</code>\u4ee3\u8868\u4f5c\u8005\uff0c\u7528\u6cd5\uff1a<code>\\author{&lt;the author of the work&gt;}</code> <code>\\date</code>\u4ee3\u8868\u65e5\u671f\uff0c\u7528\u6cd5\uff1a<code>\\date{the date of the work}</code> </li> <li>package <code>\\usepackage</code>\u76f8\u5f53\u4e8e\u5f15\u7528\u7b2c\u4e09\u65b9\u5e93\uff0c\u5b9e\u73b0\u66f4\u591a\u5143\u5316\u7684\u62d3\u5c55\u529f\u80fd\u3002      \u7528\u6cd5\uff1a<code>\\usepackage{&lt;the package you want to include&gt;}</code> </li> <li> <p>linespread <code>\\linespread</code>\u4ee3\u8868\u5168\u5c40\u884c\u8ddd\u8bbe\u7f6e\uff0c\u540e\u7eed\u5728\u6587\u672c\u4e2d\u4e5f\u662f\u65e0\u6cd5\u5c40\u90e8\u4fee\u6539\u7684\u3002      \u53ef\u4ee5\u6709\u591a\u79cd\u5355\u4f4d\uff0c\u7528\u6cd5\uff1a<code>\\linespread{&lt;distance&gt;}</code>\u3002  </p> </li> <li> <p>\u6b63\u6587\u533a   \u5c06\u5728\u8fd9\u91cc\u4e66\u5199\u6587\u7ae0\u6b63\u6587\u90e8\u5206\uff0c\u6709\u5f88\u591a\u7528\u6cd5\u5c06\u5728\u7b2c\u4e8c\u90e8\u5206\u5199\u51fa  </p> </li> </ul>"},{"location":"%E5%86%99%E4%BD%9C/latex/#_2","title":"\u4e8c\u3001\u7528\u6cd5","text":"<ul> <li> <p>\u6ce8\u91ca   \u4f7f\u7528<code>%</code>\u6765\u8fdb\u884c\u6ce8\u91ca\uff0c\u7c7b\u4f3cC\u8bed\u8a00\u4e2d\u7684<code>//</code>\u3002  </p> </li> <li> <p>\u6362\u884c\u3001\u5206\u6bb5\u4e0e\u65ad\u9875   \u4f7f\u7528<code>\\\\</code>\u6216\u8005<code>\\newline</code>\u5f3a\u5236\u6362\u884c\uff0c\u4f46\u662f\u4e0d\u4f1a\u53e6\u8d77\u4e00\u6bb5\u3002   \u4f7f\u7528<code>\\par</code>\u5b9e\u73b0\u5206\u6bb5\uff0c\u5c31\u89c2\u6d4b\u6765\u770b\u662f\u6709\u7f29\u8fdb\u7684\u3002   \u4f7f\u7528<code>\\newpage</code>\u5b9e\u73b0\u5f3a\u5236\u65ad\u9875\u3002   \u4f7f\u7528<code>\\clearpage</code>\u4e0d\u4ec5\u4f1a\u5b9e\u73b0\u5f3a\u5236\u65ad\u9875\uff0c\u8fd8\u4f1a\u6e05\u9664\u6d6e\u52a8\u4f53\u3002  </p> </li> <li> <p>\u5b57\u4f53\u4e0e\u5b57\u53f7   \u4f7f\u7528<code>{\\bfseries &lt;text&gt;}</code> &amp; <code>\\textbf{&lt;text&gt;}</code>\u6765\u5b8c\u6210\u5b57\u4f53\u4e0e\u5b57\u53f7\u7684\u8c03\u8bd5\uff0c\u4f46\u4e0d\u8981\u6ee5\u7528\u3002   e.g.1 This is a {\\Large large cat} and that is a {\\small small cat}.   e.g.2 This is \\textbf{B} and that is \\textit{I}.   e.g.1 This is a {\\Large large cat} and that is a {\\small small cat}.   e.g.2 This is B and that is I.  </p> </li> <li> <p>\u5b57\u7b26\u4e0e\u6807\u70b9  </p> </li> <li>\u7279\u6b8a\u5b57\u7b26\u8f6c\u4e49      \u4f7f\u7528<code>\\</code>\u5bf9\u67d0\u4e9b\u7279\u6b8a\u5b57\u7b26\u8f6c\u4e49\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u7279\u6b8a\u5b57\u7b26\u53ef\u80fd\u6709\u522b\u7684\u542b\u4e49\u3002      e.g.1 <code>\\_</code>\u3001<code>\\%</code>\u3001<code>\\$</code>\u3001<code>\\&amp;</code>\u3001<code>\\{</code>\u3001<code>\\}</code> \u7b49\u3002      e.g.2 <code>\\~{}</code>\u3001<code>\\^{}</code> \u5e26\u5927\u62ec\u53f7\u9632\u6b62\u5c06\u540e\u9762\u7684\u5b57\u7b26\u7406\u89e3\u4e3a\u53c2\u6570\u3002  </li> <li><code>- -- ---</code>      \u4f7f\u7528<code>-</code>\u4ee3\u8868\u8fde\u63a5\u53f7      \u4f7f\u7528<code>--</code>\u4ee3\u8868\u77ed\u7834\u6298\u53f7      \u4f7f\u7528<code>---</code>\u4ee3\u8868\u957f\u7834\u6298\u53f7  </li> <li> <p>\u9632\u6b62\u897f\u6587\u8fde\u5b57      \u4f7f\u7528<code>{}</code>\u5b9e\u73b0\u5b57\u6bcd\u7684\u5206\u9694\uff0c\u9632\u6b62\u8fde\u5728\u4e00\u5757\u3002      e.g. <code>difficult dif{}f{}icult</code>      e.g. difficult dif{}f{}icult  </p> </li> <li> <p>\u884c\u8ddd\u4e0e\u95f4\u8ddd\u7684\u8bbe\u7f6e   \u4f7f\u7528<code>{\\linespread{&lt;distance&gt;}\\selectfont &lt;text&gt;}</code>\u6765\u8c03\u6574\u5c40\u90e8\u7684\u884c\u8ddd\u3002   \u4f7f\u7528<code>\\quad \\qquad</code>\u5206\u522b\u6c34\u5e73\u95f4\u9694\u4e00\u4e2am\u5b57\u6bcd\u548c\u4e24\u4e2am\u5b57\u6bcd\u7684\u8ddd\u79bb\u3002   \u4f7f\u7528<code>\\hspace{&lt;length&gt;}</code>\u63d2\u5165\u6c34\u5e73\u7684\u95f4\u8ddd\u3002   \u4f7f\u7528<code>\\vspace{&lt;distance&gt;}</code>\u63d2\u5165\u5782\u76f4\u7684\u95f4\u8ddd\u3002</p> </li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/DoublyLinkedList/","title":"\u53cc\u5411\u94fe\u8868","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/DoublyLinkedList/#1","title":"1.\u5b9a\u4e49","text":"<p>\u4e00\u822c\u800c\u8a00\uff0c\u6211\u4eec\u8ba4\u4e3a\u53cc\u5411\u94fe\u8868\u7684C\u8bed\u8a00\u5b9a\u4e49\u5982\u4e0b\uff1a <pre><code>struct node{\n    struct node* prev;\n    int data;\n    struct node* next;\n}link;\n</code></pre></p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/DoublyLinkedList/#2","title":"2.\u64cd\u4f5c","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/DoublyLinkedList/#21","title":"2.1 \u672b\u5c3e\u63d2\u5165","text":"<pre><code>struct node* AddToEnd(struct node* head,int newdata){\n    struct node ptr = head;\n\n    struct node* temp;\n    temp = (struct node*)malloc(sizeof(struct node));\n    temp-&gt;next = NULL;\n    temp-&gt;data = newdata;\n\n    while( ptr-&gt;next != null){\n        ptr = ptr-&gt;next;\n    }\n    ptr-&gt;next = temp;\n    temp-&gt;prev = ptr;\n    return head;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/DoublyLinkedList/#22","title":"2.2 \u5934\u90e8\u63d2\u5165","text":"<pre><code>struct node* AddToHead(struct node* head,int newdata){\n    struct node* temp;\n    temp = (struct node*)malloc(sizeof(struct node*));\n    temp-&gt;prev = NULL;\n    temp-&gt;data = newdata;\n    temp-&gt;next = head;\n    head-&gt;prev = temp;\n    head = temp;\n    return head;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/DoublyLinkedList/#23","title":"2.3 \u4e2d\u95f4\u63d2\u5165","text":"<pre><code>//\u6b64\u5904\u4e3a\u4e86\u5b9e\u73b0\u6dfb\u52a0\u8282\u70b9\u4f4d\u7f6e\u7684\u786e\u5b9a\uff0c\u7528\u201c\u7b2cN\u4e2a\u8282\u70b9\u201d\u6765\u8fdb\u884c\u63cf\u8ff0\uff0c\u5373\uff1a\u5728\u7b2cN\u4e2a\u8282\u70b9\u540e\u63d2\u5165\u65b0\u8282\u70b9\u3002\n//\u5176\u4ed6\u60c5\u51b5\u8bf8\u5982\u201c\u67e5\u627e\u7b2c\u67d0\u4e2a\u8282\u70b9\u7684\u6570\u636e\u201d\uff0c\u5b9e\u73b0\u65b9\u6cd5\u7c7b\u4f3c\u3002\nstruct node* AddToMid(struct node* head, int newdata, int N){\n    struct node* ptr = head;\n    struct node* temp;\n    temp = (struct node*)malloc(sizeof(struct node*));\n    temp-&gt;prev = NULL;\n    temp-&gt;next = NULL;\n    temp-&gt;data = newdata;\n\n    for(int i = 1;i &lt; N;i ++){\n        ptr = ptr-&gt;next;\n    }\n\n    temp-&gt;next = ptr-&gt;next;\n    (ptr-&gt;next)-&gt;prev = temp;//step 1\n\n    temp-&gt;prev = ptr;\n    ptr-&gt;next = temp;//step 2\n\n    return head;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/DoublyLinkedList/#24","title":"2.4 \u521b\u5efa\u53cc\u94fe\u8868","text":"<pre><code>//\u6b64\u5904\u5047\u5b9a\u5df2\u7ed9\u51fa\u5934\u8282\u70b9\nstruct node* createlinklist(struct node* head){\n    printf(\"\u8bf7\u8f93\u5165\u8282\u70b9\u4e2a\u6570:\\n\");\n    scanf(\"%d\", &amp;N);\n    if(N == 0){\n        head = NULL;\n        return head;\n    }\n\n    int newdata, i;\n    //\u521b\u5efa\u7b2c\u4e00\u4e2a\u8282\u70b9\uff0c\u60c5\u51b5\u7279\u6b8a\uff0c\u6240\u4ee5\u5355\u72ec\u5904\u7406\u3002\n        printf(\"\u8bf7\u8f93\u5165\u7b2c1\u4e2a\u8282\u70b9\u7684\u6570\u636e\uff1a\\n\");\n        scanf(\"%d\", &amp;newdata);\n        head-&gt;prev = NULL;\n        head-&gt;next = NULL;\n        head-&gt;data = newdata;\n\n    if(N &gt; 1){\n        struct node* ptr = head;\n        struct node* temp;\n        for(i = 2;i &lt;= N;i ++){\n            printf(\"\u8bf7\u8f93\u5165\u7b2c%d\u4e2a\u8282\u70b9\u7684\u6570\u636e\uff1a\\n\", i);\n            scanf(\"%d\", &amp;newdata);\n            //\u65b0\u8282\u70b9\u521b\u5efa\n            temp = malloc(sizeof(struct node*))\n            temp-&gt;next = NULL;\n            temp-&gt;prev = ptr;\n            temp-&gt;data = newdata;\n            ptr = temp;\n            free(temp);\n        }\n    }\n    return head;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/DoublyLinkedList/#25","title":"2.5 \u5220\u9664\u8282\u70b9","text":"<pre><code>//\u6b64\u5904\u4e3a\u4e86\u5b9e\u73b0\u5220\u9664\u8282\u70b9\u4f4d\u7f6e\u7684\u786e\u5b9a\uff0c\u7528\u201c\u7b2cN\u4e2a\u8282\u70b9\u201d\u6765\u8fdb\u884c\u63cf\u8ff0\uff0c\u5373\uff1a\u5220\u9664\u7b2cN\u4e2a\u8282\u70b9\u3002\n//\u5176\u4ed6\u60c5\u51b5\u8bf8\u5982\u201c\u67e5\u627e\u7b2c\u67d0\u4e2a\u8282\u70b9\u7684\u6570\u636e\u6765\u786e\u5b9a\u5220\u9664\u8282\u70b9\u201d\uff0c\u5b9e\u73b0\u65b9\u6cd5\u7c7b\u4f3c\u3002\nstruct node* Delete(struct node* head, int N){\n    struct node* ptr = head, *temp;\n    for(i = 1;i &lt; N - 1;i ++){\n        ptr = ptr-&gt;next;\n    }\n\n    temp = ptr-&gt;next;//\u6b63\u786e\u64cd\u4f5c\u7684\u8bdd\uff0c\u5220\u9664\u7684\u8282\u70b9\u540e\u7eed\u9700\u8981\u91ca\u653e\u51fa\u6765\uff0c\u6b64\u5904\u5373\u4e3atemp\n    ptr-&gt;next = temp-&gt;next;\n    (temp-&gt;next)-&gt;prev = ptr;\n    free(temp);\n\n    return head;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/","title":"New Words","text":"<p>nonempty \u975e\u7a7a\u7684 vertice  \u9876\u70b9[pl] vertex \u9876\u70b9 adjacent \u76f8\u90bb\u7684\uff1b\u90bb\u8fd1\u7684 subgraph \u5b50\u56fe incident \u5165\u5c04 prerequisite \u5148\u51b3\u6761\u4ef6\uff0c\u524d\u63d0\uff1b\u9884\u5907\u8bfe\u7a0b predecessor \u524d\u9a71 successor \u540e\u7ee7 transitive \u53ef\u4f20\u9012\u7684 dag = directed acyclic graph \u6709\u5411\u65e0\u73af\u56fe topological</p> <p> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#notes","title":"Notes","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#_1","title":"\u4e00\u3001\u56fe\u7684\u5b9a\u4e49","text":"<p>\u8bb0\u9876\u70b9\u96c6\u5408\u4e3aV(G) \uff0c\u8fb9\u7684\u96c6\u5408\u4e3aE(G)\uff0c\u56feG\u53ef\u8868\u793a\u4e3aG(V, E)\u3002 \u70b9\u7684\u4e2a\u6570\u53ef\u8868\u793a\u4e3a|V|\uff0c\u8fb9\u7684\u4e2a\u6570\u53ef\u8868\u793a\u4e3a|E|\u3002\uff08\u9876\u70b9\u6570\u4e0d\u53ef\u4e3a0\uff09  \u00a0 \u00a0 \u00a0 \u00a0</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#_2","title":"\u4e8c\u3001\u76f8\u5173\u6982\u5ff5","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#1","title":"1.\u6709\u5411\u56fe","text":"<p>\\(&lt;v_i, v_j&gt;\\)\u4ee3\u8868\u6709\u5e8f\u5bf9\uff0c\\(v_i\\)\u8bb0\u4e3atail\uff0c\\(v_j\\)\u8bb0\u4e3ahead\uff0c\u7531tail\u6307\u5411head\u3002 \u6ce8\uff1a\\(v_i \\longrightarrow v_j\\)\u7528\u82f1\u6587\u9610\u8ff0\u4e3a\\(v_i\\) is adjacent to \\(v_j\\); \\(v_j\\) is adjacent from \\(v_i\\)</p> <p> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#2","title":"2.\u65e0\u5411\u56fe","text":"<p>\\(&lt;v_i, v_j&gt; = &lt;v_j, v_i&gt; ::=\\)\u540c\u4e00\u6761\u8fb9\u3002</p> <p> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#3","title":"3.\u7b80\u5355\u56fe","text":"<p>1.\u4e0d\u5b58\u5728\u91cd\u590d\u8fb9\u3002  2.\u6ca1\u6709\u6307\u5411\u81ea\u8eab\u7684\u8fb9(self loop)\u3002 \u6ce8\uff1a\u8fd9\u95e8\u8bfe\u7a0b\u76ee\u524d\u5e94\u8be5\u662f\u57fa\u672c\u53ea\u8ba8\u8bba\u7b80\u5355\u56fe\uff0c\u6240\u4ee5ppt\u4e2d\u7ed9\u51fa\u4e86\u9650\u5236\u3002</p> <p> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#4","title":"4.\u591a\u91cd\u56fe","text":"<p>\u6982\u5ff5\u4e0e\u7b80\u5355\u56fe\u662f\u76f8\u53cd\u7684\uff0c\u4e24\u8282\u70b9\u95f4\u8fb9\u6570\u591a\u4e8e\u4e00\u6761\uff0c\u53c8\u5141\u8bb8\u9876\u70b9\u7528\u4e00\u6761\u8fb9\u548c\u81ea\u5df1\u76f8\u8fde\uff0c\u5219\u4e3a\u591a\u91cd\u56fe\u3002</p> <p> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#5","title":"5.\u5b8c\u5168\u56fe","text":"<p>\u5bf9\u6709\u5411\u56fe\u800c\u8a00\uff0c\u5f53\u9876\u70b9\u6570\u4e3an\u65f6\uff0c\u8fb9\u6570\u4e3an(n-1)\uff0c\u8be5\u56fe\u5c31\u4e3a\u5b8c\u5168\u56fe\u3002 \u5bf9\u65e0\u5411\u56fe\u800c\u8a00\uff0c\u5f53\u9876\u70b9\u6570\u4e3an\u65f6\uff0c\u8fb9\u6570\u4e3an(n-1)/2\uff0c\u8be5\u56fe\u5c31\u4e3a\u5b8c\u5168\u56fe\u3002</p> <p> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#6subgraph","title":"6.\u5b50\u56fe\uff08subgraph\uff09\u4e0e\u751f\u6210\u5b50\u56fe","text":"<p>\u5b50\u56fe\uff1a\u5bf9\u4e8e\u4e24\u4e2a\u56fe\\(G(V,  E), G_0(V_0,E_0)\\) \uff0c\u5982\u679c\\(V_0\\)\u662f\\(V\\)\u7684\u5b50\u96c6\uff0c\\(E_0\\)\u662f\\(E\\)\u7684\u5b50\u96c6\uff0c\u90a3\u4e48\\(G_0\\)\u53eb\u505a\\(G\\)\u7684\u5b50\u56fe\u3002 \u751f\u6210\u5b50\u56fe\uff1a\u5982\u679c\u4e0a\u8ff0\u4e24\u4e2a\u56fe\u7684\u9876\u70b9\u6570\uff08V\uff09\u76f8\u7b49\uff0c\u90a3\u4e48\\(G_0\\)\u79f0\u4e3a\\(G\\)\u7684\u751f\u6210\u5b50\u56fe\u3002 \u6ce8\uff1a\u4e0d\u662fV\u548cE\u7684\u4efb\u4f55\u5b50\u96c6\u90fd\u80fd\u6784\u6210G\u7684\u5b50\u56fe\uff0c\u56e0\u4e3a\u5b83\u53ef\u80fd\u4e0d\u6784\u6210\u56fe\uff0c\u5373E\u7684\u5b50\u96c6\u4e2d\u7684\u67d0\u4e9b\u8fb9\u5173\u8054\u7684\u9876\u70b9\u53ef\u80fd\u4e0d\u5728\u8fd9\u4e2aV\u7684\u5b50\u96c6\u4e2d\u3002</p> <p> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#7pathsimple-pathlength-of-a-path","title":"7.\u8def\u5f84(path)\u3001\u7b80\u5355\u8def\u5f84(simple path)\u4e0e\u8def\u5f84\u957f\u5ea6(length of a path)","text":"<p>\u8def\u5f84\uff1a\u200b\u9876\u70b9\\(v_p\\)\u5230\u9876\u70b9\\(v_q\\)\u4e4b\u95f4\u7684\u4e00\u6761\u8def\u5f84\u662f\u6307\u9876\u70b9\u5e8f\u5217\\(\\{v_p , v_{i_1} ,v_{i_2} , ... , v_{i_m} , v_q\\}\\)\uff0c\u7531\\((v_p,v_{i_1}), (v_{i_1}, v_{i_2}),...,(v_{i_m},v_q)\\)\u6216\u8005\\(&lt;v_p,v_{i_1}&gt;, &lt;v_{i_1}, v_{i_2}&gt;,...,&lt;v_{i_m},v_q&gt;\\) \u6784\u6210\u3002 \u7b80\u5355\u8def\u5f84\uff1a\u4ece\u9876\u70b9\\(v_i\\)\u5230\\(v_j\\)\u7684\u8def\u5f84\uff0c\u9876\u70b9\u4e0d\u80fd\u91cd\u590d\u51fa\u73b0\uff08distinct\uff09\u3002 \u8def\u5f84\u957f\u5ea6\uff1a\u8def\u5f84\u7684\u8fb9\u7684\u4e2a\u6570\u3002</p> <p> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#8cycle","title":"8.\u56de\u8def(cycle)","text":"<p>\u56de\u8def\uff1a\u9664\u4e86\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u76f8\u540c\uff0c\u5176\u4ed6\u9876\u70b9\u90fd\u4e0d\u76f8\u540c\u7684\u8def\u5f84\uff0c\u79f0\u4e3a\u56de\u8def\u6216\u73af\u3002 \u6ce8\uff1appt\u6b64\u5904\u5b9a\u4e49\u7684\u56de\u8def\u5c31\u662f\u7b80\u5355\u56de\u8def\u3002</p> <p> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#9connectedstrongly-connected-component","title":"9.\u8fde\u901a(connected)\u4e0e\u5f3a\u8fde\u901a(strongly connected component)","text":"<p>\u9876\u70b9\u7684\u8fde\u901a\uff1a\u5982\u679c\u65e0\u5411\u56feG\u4e2d\u4e24\u4e2a\u9876\u70b9\u4e4b\u95f4\u6709\u8def\u5f84\u5b58\u5728\uff0c\u5c31\u79f0\u8fd9\u4e24\u4e2a\u9876\u70b9\u4e3a\u8fde\u901a\u3002 \u56fe\u7684\u8fde\u901a\uff08\u8fde\u901a\u56fe\uff09\uff1a\u5982\u679c\u5728\u56fe\u4e2d\uff0c\u6bcf\u4e24\u4e2a(pair of)\u9876\u70b9\u90fd\u662f\u8fde\u901a\u7684\uff0c\u6211\u4eec\u5c31\u79f0\u8fd9\u4e2a\u56fe\u4e3a\u8fde\u901a\u56fe\u3002 \u8fde\u901a\u5206\u91cf(component of an undirected G)\uff1a\u65e0\u5411\u56feG\u4e2d\u6700\u5927\u7684\u8fde\u901a\u5b50\u56fe\uff08\u76f8\u5f53\u4e8e\u628a\u56fe\u5206\u6210\u51e0\u4e2a\u90e8\u5206\uff09\u3002 \u9876\u70b9\u7684\u5f3a\u8fde\u901a\uff1a\u5982\u679c\u6709\u5411\u56feG\u4e2d\u4e24\u4e2a\u9876\u70b9\u4e4b\u95f4\uff0c\u5b58\u5728\u8def\u5f84\\(&lt;v_i, v_j&gt;\\)\u548c\\(&lt;v_j, v_i&gt;\\)\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u662f\u53cc\u5411\u7684\u634f\uff09\uff0c\u90a3\u4e48\u5c31\u8bf4\u8fd9\u5bf9\u9876\u70b9\u5f3a\u8fde\u901a\u3002 \u56fe\u7684\u5f3a\u8fde\u901a\uff08\u5f3a\u8fde\u901a\u56fe\uff09\uff1a\u5982\u679c\u5728\u6709\u5411\u56feG\u4e2d\uff0c\u6bcf\u4e24\u4e2a(pair of)\u9876\u70b9\u90fd\u662f\u5f3a\u8fde\u901a\u7684\uff0c\u6211\u4eec\u5c31\u79f0\u8fd9\u4e2a\u56fe\u4e3a\u5f3a\u8fde\u901a\u56fe\u3002 \u5f3a\u8fde\u901a\u5206\u91cf(strongly connected component)\uff1a\u6709\u5411\u56feG\u4e2d\u7684\u6700\u5927\u8fde\u901a\u5b50\u56fe\u3002</p> <p> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#10degreein-degreeout-degree","title":"10.\u5ea6(degree)\u3001\u5165\u5ea6(in-degree)\u4e0e\u51fa\u5ea6(out-degree)","text":"<p>\u5ea6\uff1a\u4e00\u4e2a\u9876\u70b9\u7684\u6240\u8fde\u7684\u8fb9\u7684\u6570\u76ee(number of edges incident to...) \u5165\u5ea6\uff1a\uff08\u5728\u6709\u5411\u56fe\u4e2d\uff09\u6307\u5411\u9876\u70b9/\u9876\u70b9\u4e3a\u7ec8\u70b9\u7684\u8fb9\u7684\u6570\u76ee\u3002 \u51fa\u5ea6\uff1a\uff08\u5728\u6709\u5411\u56fe\u4e2d\uff09\u9876\u70b9\u4e3a\u8d77\u70b9\u7684\u8fb9\u7684\u6570\u76ee\u3002 \u6ce8\uff1a\u5728|V|\u4e2a\u9876\u70b9\uff0c|E|\u6761\u8fb9\u4e2d\u7684\u65e0\u5411\u56fe\u4e2d\uff0c \u8bb0\u6bcf\u4e2a\u9876\u70b9\u7684\u5ea6\u4e3aK\uff0c\\(\\sum _{i = 1}^{|V|}K_i=2|E|\\)</p> <p> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#11treedag","title":"11.\u6811(tree)\u4e0e\u6709\u5411\u65e0\u73af\u56fe(DAG)","text":"<p>\u6811\uff1a\u4e00\u4e2a\u8fde\u901a\u4e14\u4e0d\u6210\u73af\u7684\u6811\u3002 \u6ce8\uff1a\u540c\u65f6\u4e5f\u662f\u5305\u542b\u5168\u90e8\u9876\u70b9\u7684\u6781\u5c0f\u8fde\u901a\u5b50\u56fe\u3002 \u6709\u5411\u65e0\u73af\u56fe\uff1a\uff08\u901a\u4fd7\u6613\u61c2hhh\uff09\\(E\\)\u4e2d\u90fd\u662f\u6709\u65b9\u5411\u7684\u8fb9\u4e14\u4e0d\u6784\u6210\u56de\u8def\u3002 \u00a0\u00a0 \u603b\u7ed3\uff1a\u8fd9\u4e9b\u884d\u751f\u51fa\u6765\u7684\u5b9a\u4e49\u5f97\u8bb0\u7262\uff0c\u82f1\u6587\u548c\u4e2d\u6587\u5728\u8111\u5b50\u91cc\u8981\u5bf9\u5e94\u5f97\u4e0a </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#representation-of-graphs","title":"\u4e09\u3001\u56fe\u7684\u50a8\u5b58\u7ed3\u6784\uff08\u6216\u8005\u8868\u8ff0\u4e3a\u4ee3\u8868\uff09(representation of graphs)","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#1adjacency-matrix","title":"1.\u90bb\u63a5\u77e9\u9635(adjacency matrix)","text":"<p>\u601d\u8def\u662f\u5c06\\(&lt;v_i, v_j&gt;\\)\u4e2d\\(i\\)\u548c\\(j\\)\uff0c\u901a\u8fc70\u548c1\u5199\u8fdb\u77e9\u9635\u4e2d\uff08\u6216\u8005\u8bf4\u4e8c\u7ef4\u6570\u7ec4\uff1f\uff09\uff0c\u8bb0\u4e3a\uff1a $$ A[i][j] = \\left{\\begin{matrix} 1  &amp; \u5982\u679c(v_i,v_j)\u6216\u6216\u4e3aG\u7684\u8fb9 \\ 0  &amp; \u5982\u679c(v_i,v_j)\u4e0d\u4e3aG\u7684\u8fb9 \\end{matrix}\\right. $$"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#11","title":"1.1 \u65e0\u5411\u56fe\u4e2d\uff1a","text":"<p>\u6027\u8d281\uff1a\u5bf9\u89d2\u7ebf\u4e0a\u5168\u4e3a0\uff0c\u4e14\u90bb\u63a5\u77e9\u9635\u5173\u4e8e\u77e9\u9635\u5bf9\u89d2\u7ebf\u5bf9\u79f0(symmetric)\u3002 \u6ce8\uff1a\u8fd9\u4ee3\u8868\u7740\u50a8\u5b58\u65e0\u5411\u56fe\u7684\u6570\u636e\u53ef\u4ee5\u53ea\u5b58\u50a8\u4e00\u534a\u5de6\u53f3\uff0c\u8282\u7701\u4e86\u7a7a\u95f4(save space!)\u3002 \u6027\u8d282\uff1a\\(v_i\\)\u6784\u6210\u7aef\u70b9\u6240\u8fde\u63a5\u7684\u8fb9\u7684\u6570\u76ee\u53ef\u4ee5\u4ece\u7b2c\\(i\\)\u5217\u6216\u7b2c\\(i\\)\u884c\u8bfb\u51fa\uff0c\u5373\u6709\u591a\u5c11\u4e2a1\uff0c\u5c31\u8fde\u63a5\u4e86\u591a\u5c11\u6761\u8fb9\u3002 \u6027\u8d283\uff1a\\(v_i\\)\u6784\u6210\u7aef\u70b9\u7684\u90bb\u63a5\u70b9\u53ef\u4ee5\u4ece\u7b2c\\(i\\)\u5217\u6216\u7b2c\\(i\\)\u884c\u8bfb\u51fa\uff0c\u5373\u8bfb\u51fa\u7ed3\u679c\u4e3a1\u7684\u5217\uff0c\u5c31\u4e3a\u5bf9\u5e94\u7684\u90bb\u63a5\u70b9\u4e0b\u6807\u3002  \u00a0</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#12","title":"1.2 \u6709\u5411\u56fe\u4e2d\uff1a","text":"<p>\u6027\u8d281\uff1a\u5bf9\u89d2\u7ebf\u4e0a\u5168\u4e3a0\uff0c\u4f46\u4e0d\u4e00\u5b9a\u5bf9\u79f0\u3002 \u6027\u8d282\uff1a\u201c\u7ad6\u5165\u6a2a\u51fa\u201c\uff0c\u5373\u5bfb\u627e\u9876\u70b9\\(v_i\\)\u7684\u5165\u5ea6\uff0c\u53ef\u4ee5\u5c06\u5176\u6240\u5bf9\u5e94\u7684\u5217\uff08\u5217\u662f\u7ad6\u7740\u6392\u653e\u6570\u636e\u7684\uff09\u7684\u5404\u9879\u6c42\u548c\uff1b\u5bfb\u627e\u9876\u70b9\\(v_i\\)\u7684\u51fa\u5ea6\uff0c\u53ef\u4ee5\u5c06\u5176\u6240\u5bf9\u5e94\u7684\u884c\uff08\u884c\u662f\u6a2a\u7740\u6392\u653e\u6570\u636e\u7684\uff09\u7684\u5404\u9879\u6c42\u548c\u3002\u5176\u4e2d\u4e3a1\u7684\u9879\u4ee3\u8868\\(v_i\\)\u4e0e\u8be5\u9876\u70b9\u8fde\u901a\u3002  \u00a0</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#13","title":"1.3 \u4ee3\u7801\u5b9e\u73b0","text":"<p>\u8fd9\u4e2a\u7ed3\u6784\u8981\u8bb0\u5f55\u7684\u4e1c\u897f\uff1a\u9876\u70b9\u6570\u76ee|V|\u3001\u8fb9\u6570\u76ee|E|\u3001\u9876\u70b9\u540d\u79f0\u3001\u90bb\u63a5\u77e9\u9635\u3002 \u65f6\u95f4\u590d\u6742\u5ea6\\(O(1)\\)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\\(O(n^2)\\)\u3002 \u6ce8\uff1a\u7f3a\u70b9\u5c31\u662f\u5f53\u9876\u70b9\u591a\u800c\u8fb9\u5c11\u7684\u60c5\u51b5\u4e0b\u5f88\u6d6a\u8d39\u7a7a\u95f4\u3002</p> <p><pre><code>#define maxsize 1007\ntypedef struct {\n    //v\u548ce\u5206\u522b\u4ee3\u8868\u9876\u70b9\u6570\u76ee\u548c\u8fb9\u6570\u76ee\n    //\u6709\u5411\u56fe\u4e2d\u4f1a\u628a\u8fb9\u6570\u76ee\u8bb0\u4f5c\u5f27\u6570\uff0c\u4e5f\u53ef\u4ee5\u7528a(arcnum)\u4ee3\u66ffe\n    int v, e;\n    char V[maxsize];//\u5b58\u50a8\u9876\u70b9V\n    int E[maxsize][maxsize];//\u5b58\u50a8E\u7684\u90bb\u63a5\u77e9\u9635\n} amgraph;\n</code></pre> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#2adjacency-lists","title":"2.\u90bb\u63a5\u8868(adjacency lists)","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#21","title":"2.1 \u6982\u5ff5\u7406\u89e3","text":"<p>\u6709\u70b9\u590d\u6742\u62bd\u8c61\uff0c\u6211\u5c06\u5176\u7b80\u5355\u7406\u89e3\u4e3a\u591a\u4e2a\u94fe\u8868\u7684\u5934\u6307\u9488\u201d\u653e\u201c\u5728\u4e00\u4e2a\u6570\u7ec4\u91cc\uff0c\u800c\u8fd9\u4e2a\u6570\u7ec4\u548c\u5176\u4ed6\u8981\u7d20\u4e00\u540c\u7ec4\u6210\u4e86\u90bb\u63a5\u8868\u7ed3\u6784\u3002 \u6ce81\uff1a\u66f4\u9002\u7528\u4e8e\u7a00\u758f\u56fe\u7684\u5b58\u50a8\uff0c\u4e5f\u5c31\u662f\u4e0a\u8ff0\u201d\u9876\u70b9\u591a\u8fb9\u5c11\u201c\u7684\u60c5\u51b5\u3002 \u6ce82\uff1a\u201d\u653e\u201c\u7684\u662f\u94fe\u8868\u800c\u975e\u6570\u7ec4\u7684\u539f\u56e0\u662f\u65b9\u4fbf\u540e\u7eed\u6dfb\u52a0\u65b0\u7684\u8fb9\u3002</p> <p>\u6240\u4ee5\u561e......\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\uff01  \u00a0</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#22","title":"2.2 \u57fa\u672c\u5b9a\u4e49","text":"<p><pre><code>//\u90bb\u63a5\u8868\u6bcf\u4e2a\u8282\u70b9\u5b58\u50a8\u8868\u793a\nstruct edgenode {\n    int index;//\u9876\u70b9\u7684\u4f4d\u7f6e\uff08\u7406\u89e3\u6210\u6807\u8bb0\uff0c\u6240\u4ee5\u4e0d\u4e00\u5b9a\u662fint\uff09\n    struct node* next;//\u6307\u5411\u4e0b\u4e00\u8282\u70b9\u7684\u6307\u9488\n} edgenode;\n\n//\u90bb\u63a5\u8868\u7684\u5b58\u50a8\u7ed3\u6784\nstruct algraph {\n    int v, e;//\u9876\u70b9\u548c\u8fb9\u7684\u6570\u91cf\n    struct node **adjlist;//\u4e8c\u7ef4\u6307\u9488\n} algraph;\n</code></pre> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#23","title":"2.3 \u76f8\u5173\u64cd\u4f5c","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#231","title":"2.3.1 \u521b\u5efa\u8282\u70b9","text":"<p>\u55ef\uff0c\u5f88\u57fa\u7840\uff0c\u94fe\u8868\u7684\u57fa\u672c\u64cd\u4f5c...... <pre><code>struct node *create_node(int newindex) {\n    //\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u4e3a\u5176\u5206\u914d\u7a7a\u95f4\n    struct node* temp = (struct node*) malloc(sizeof(struct node));\n    //\u8d4b\u4e88\u8282\u70b9\u6570\u636e\n    temp-&gt;index = newindex;\n    temp-&gt;next = NULL;\n    return temp;\n}\n</code></pre></p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#232","title":"2.3.2 \u521b\u5efa\u5e76\u521d\u59cb\u5316\u90bb\u63a5\u8868","text":"<p>\u5176\u4ed6\u90e8\u5206\u6bd4\u8f83\u57fa\u7840\uff0c\u5173\u952e\u70b9\u5728\u4e8e\u8fd9\u4e2a\u4e8c\u7ef4\u6307\u9488\u7684\u5904\u7406\u3002 \u6ce8\uff1a\u6211\u4eec\u4e5f\u53ef\u4ee5\u628a\u8fb9new_e\u8d4b\u503c\u4e3a0\uff0c\u5b9e\u73b0\u8fb9\u6570\u76ee\u7684\u521d\u59cb\u5316\uff08\u4fbf\u4e8e\u8ba1\u7b97\u8fb9\u6570\u76ee\u7684\u53d8\u5316\uff09\u3002 <pre><code>struct algraph *create_adjlist(int new_v, int new_e) {\n    //\u4e3a\u90bb\u63a5\u8868\u5206\u914d\u7a7a\u95f4\n    struct algraph *temp = malloc(sizeof(struct algraph));\n    //\u4e3a\u8fd9\u4e2a\u4e8c\u7ef4\u6307\u9488\u6307\u5411\u5206\u914d\u4e86\u6570\u76ee\u4e3anew_v\uff08\u5373\u9876\u70b9\u6570\uff09\u4e2a\u7a7a\u95f4\uff0c\n    //\u800c\u6bcf\u4e2a\u7a7a\u95f4\u90fd\u662fstruct node*\u7684\u5927\u5c0f\u3002\n    //\u6b64\u5904\u4f7f\u7528calloc\u51fd\u6570\u8ba9\u5176\u521d\u59cb\u5316\u3002\n    temp-&gt;adjlist = calloc(new_v, sizeof(struct node*));\n    //\u5176\u4ed6\u6570\u636e\n    temp-&gt;v = new_v;\n    temp-&gt;e = new_e;\n    //\u521d\u59cb\u5316\u7ed3\u675f\uff0c\u8fd4\u56de\u90bb\u63a5\u8868\u7684\u6307\u9488\n    return temp;\n}\n</code></pre> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#3adjacency-multilists","title":"3.\u90bb\u63a5\u591a\u91cd\u8868(adjacency multilists)","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#31","title":"3.1 \u6982\u5ff5\u7406\u89e3","text":"<p>\u90bb\u63a5\u591a\u91cd\u8868\u662f\u65e0\u5411\u56fe\u7684\u53e6\u4e00\u79cd\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u3002</p> <p> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#4weighed-edges","title":"4.\u52a0\u6743\u56fe(weighed edges)","text":"<p>\u52a0\u6743\u56fe\u76f8\u5f53\u4e8e\u7ed9\u8fb9\u52a0\u4e86\u4e00\u4e2a\u503c\uff0c\u8fb9\u7684\u503c\u5c31\u4e0d\u518d\u662f\u6e05\u4e00\u8272\u7684\u201d1\u201c\u3002 \u5bf9\u4e8e\u90bb\u63a5\u77e9\u9635\u800c\u8a00\uff0c\u76f8\u5f53\u4e8e\u5c06\u77e9\u9635\u4e2d\u76841\u6539\u4e3a\u76f8\u5e94\u7684\u6743\u3002 \u5bf9\u4e8e\u90bb\u63a5\u8868\u548c\u4e34\u754c\u591a\u91cd\u8868\u800c\u8a00\uff0c\u76f8\u5f53\u4e8e\u5728\u7ed3\u6784\u4f53\u4e2d\u52a0\u5165\u4e86\u6743(weight)\u6570\u636e\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a <pre><code>struct edgenode {\n    int index;//\u9876\u70b9\u7684\u4f4d\u7f6e\uff08\u7406\u89e3\u6210\u6807\u8bb0\uff0c\u6240\u4ee5\u4e0d\u4e00\u5b9a\u662fint\uff09\n    struct node* next;//\u6307\u5411\u4e0b\u4e00\u8282\u70b9\u7684\u6307\u9488\n} edgenode;\n</code></pre> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#_3","title":"\u56db\u3001\u62d3\u6251\u6392\u5e8f","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#1_1","title":"1.\u5b9a\u4e49","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#11-aov","title":"1.1 AOV\u7f51","text":"<p>\u4e00\u4e2a\u5de5\u7a0b\u4e2d\u7684\u6709\u5411\u56fe\uff0c\u5176\u9876\u70b9\u4ee3\u8868\u4e00\u4e9b\u6d3b\u52a8\uff0c\u800c\u5f27\u4ee3\u8868\u4e00\u4e9b\u5173\u7cfb\uff0c\u8fd9\u79cd\u6709\u5411\u56fe\u5c31\u53ebAOV\u7f51(AOV network = Activity on Vertex Network)\u3002 \\(e.g.\\)\u5728\u4e09\u58a9\u9547\u804c\u4e1a\u6280\u672f\u5b66\u9662\u7684\u8ba1\u7b97\u673a\u8bfe\u7a0b\u4e2d\uff0c\u4f60\u9700\u8981\u5148\u4e0a\u201d\u7a0b\u5e8f\u8bbe\u8ba1\u4e0e\u7b97\u6cd5\u57fa\u7840\u201c\uff08\u8bb0\u4e3a\\(C_1\\)\uff09\u8fd9\u95e8\u8bfe\u4e4b\u540e\uff0c\u624d\u80fd\u4e0a\u201d\u6570\u636e\u7ed3\u6784\u57fa\u7840\u201c(\u8bb0\u4e3a\\(C_2\\))\uff0c\u90a3\u4e48\u8fd9\u4e2aAOV\u7f51\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a $$ C_1 \\longrightarrow C_2 $$ \u00a0</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#12-predecessorsuccessor","title":"1.2 \u524d\u9a71(predecessor)\u4e0e\u540e\u7ee7(successor)","text":"<p>\u524d\u9a71&amp;\u540e\u7ee7\uff1a\u4ece\u9876\u70b9i\u5230\u9876\u70b9j\u5b58\u5728\u8def\u5f84\uff0ci\u5c31\u662fj\u7684\u524d\u9a71\uff0cj\u5c31\u662fi\u7684\u540e\u7ee7\u3002 \u76f4\u63a5\u524d\u9a71&amp;\u76f4\u63a5\u540e\u7ee7\uff1ai\u548cj\u4e4b\u95f4\u5b58\u5728\u5f27\\(&lt;i, j&gt;\\)\uff0c\u90a3\u4e48i\u5c31\u662fj\u7684\u76f4\u63a5\u524d\u9a71\uff0cj\u5c31\u662fi\u7684\u76f4\u63a5\u540e\u7ee7\u3002</p> <p> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#13-partial-order","title":"1.3 \u504f\u5e8f(partial order)","text":"<p>\u65e0\u81ea\u53cd\u6027(irreflexive)\u4e14\u53ef\u4f20\u9012(transitive)\u7684\u5e8f\u5173\u7cfb\uff08\u4e5f\u53ef\u4ee5\u53eb\u524d\u9a71\u5173\u7cfb\uff09(precedence relation)\u53eb\u504f\u5e8f\u3002 \u6ce81\uff1a\u65e0\u81ea\u53cd\u6027\u662f\u6307\u4e0d\u4f1a\u6709\u9876\u70b9\u6307\u5411\u9876\u70b9\u81ea\u5df1\u7684\u5f27 \u6ce82\uff1a\u53ef\u4f20\u9012\u6027\u662f\u6307\\(a\\longrightarrow b,b\\longrightarrow c\\Rightarrow a\\longrightarrow c\\)</p> <p> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#14","title":"1.4 \u62d3\u6251\u5e8f\u5217\u4e0e\u62d3\u6251\u6392\u5e8f","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u56fe\\(G(V, E)\\)\uff0c\u5982\u679c\u5bf9\u4e8eV\u4e2d\u9876\u70b9\\(V_i\\)\u4e0e\\(V_j\\)\uff0c\u5b58\u5728\u4ece\\(V_i\\)\u5230\\(V_j\\)\u7684\u8def\u5f84\uff0c\u90a3\u4e48\u5728\u9876\u70b9\u5e8f\u5217\u4e2d\uff0c\\(V_i\\)\u4e00\u5b9a\u5728\\(V_j\\)\u4e4b\u524d\uff0c\u8fd9\u5c31\u53eb\u62d3\u6251\u5e8f\u5217\uff1b \u800c\u5c06\u4e00\u4e2a\u6709\u5411\u56fe\u6784\u6210\u62d3\u6251\u5e8f\u5217\uff0c\u5c31\u53eb\u62d3\u6251\u6392\u5e8f\u3002\uff08\u62d3\u6251\u5e8f\u5217\u5e76\u4e0d\u4e00\u5b9a\u552f\u4e00\uff09</p> <p> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#2improvement","title":"2.improvement\u4f2a\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u7528\u6808\u548c\u961f\u5217\u5b9e\u73b0\u8bb0\u5f55\u5165\u5ea6\u4e3a\u96f6\u7684\u9876\u70b9\u3002 \u800c\u8fd9\u79cd\u65b9\u6cd5\u5c31\u662f\u7528\u6808\u548c\u961f\u5217\uff0c\u76f8\u5f53\u4e8e\u628a\u8fd9\u4e9b\u9876\u70b9\u7684\u5e8f\u5217\u538b\u7f29\u4e3a\u6a2a\u7740\u7684\u4e00\u884c\u3002 <pre><code>void Topsort( Graph G ) {\n    //\u5b9a\u4e49\u4e00\u4e2a\u961f\u5217Q\uff0c\u50a8\u5b58\u82e5\u5e72\u8f6e\u6b21\u7b5b\u9009\u540e\u5165\u5ea6\u4e3a0\u7684\u9876\u70b9\n    Queue\u00a0 Q;\n    int\u00a0 Counter = 0;\n    Vertex\u00a0 V, W;\n    //\u521b\u5efaQ\u7684\u5927\u5c0f\uff08\u9876\u70b9\u6570\u76ee\uff09\n    Q = CreateQueue( NumVertex );\n    //\u521d\u59cb\u5316Q\n    MakeEmpty( Q );\n    //\u8fd9\u4e2a\u5faa\u73af\u662f\u4e3a\u4e86\u5c06\u5165\u5ea6\u4e3a0\u7684\u9876\u70b9\u7b5b\u5165\u961f\u5217\n    //\u663e\u7136,\u8fd9\u4e2a\u5faa\u73af\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(|V|)\n    for ( each vertex V ) {\n        if ( Indegree[ V ] == 0 ){\n            Enqueue( V, Q );\n        }\n    }\n    //\u76f4\u5230\u9876\u70b9\u6392\u5b8c\uff0c\u6709\u591a\u5c11\u6761\u5f27\u5c31\u5faa\u73af\u591a\u5c11\u6b21\uff0c\n    //\u8bf4\u660e\u8fd9\u4e2a\u5faa\u73af\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(|E|)\n    while ( !IsEmpty( Q ) ) {\n        //\u4eceQ\u4e2d\u53d6\u51fa\u4e00\u4e2a\u9876\u70b9V\n    \u00a0\u00a0\u00a0 V = Dequeue( Q );\n    \u00a0\u00a0\u00a0 //\u4e3a\u9876\u70b9V\u5206\u914d\u62d3\u6251\u6392\u5e8f\u7684\u5e8f\u5217\uff0ccounter\u4f1a\u9010\u6e10\u4ece0\u9012\u589e\n    \u00a0\u00a0\u00a0 //counter\u8d4b\u7ed9\u8fd9\u4e2aTopNum\uff0c\u5b9e\u9645\u4e0a\u4e5f\u4ee3\u8868\u4e86\u5e8f\u5217\n        TopNum[ V ] = ++ Counter; /* assign next */\n        //\u5206\u6790V\u7684\u540e\u7ee7W\uff0c\u82e5W\u5165\u5ea6\u4e3a1\uff0c\u5219\u51cf\u4e3a0\uff0c\u5165\u961f\u5217\u4e2d\n        for ( each W adjacent from V ) {\n            if ( \u2013 \u2013 Indegree[ W ] == 0 ) {\n                Enqueue( W, Q );\n            }\n        }\n\u00a0\u00a0\u00a0 }\u00a0 /* end-while */\n\u00a0\u00a0\u00a0 //\u5982\u679ccounter\u548cNumvertex\u4e0d\u7b49\uff0c\u8bf4\u660e\u4e0d\u662fDAG\n\u00a0\u00a0\u00a0 if ( Counter != NumVertex ) {\n    \u00a0\u00a0\u00a0 Error( \u201cGraph has a cycle\u201d );\n    }\n    //\u91ca\u653eQ\n\u00a0\u00a0\u00a0 DisposeQueue( Q ); /* free memory */\n}\n</code></pre> \u8fd9\u79cd\u65b9\u5f0f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(|V| + |E|)\\)\uff0c\u7684\u786e\u662f\u4e4b\u524d\u90a3\u79cd\u65b9\u6cd5\u7684improvement\u3002</p> <p> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#_4","title":"\u4e94\u3001\u6700\u77ed\u8def\u5f84","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#dijkstra","title":"Dijkstra\u7b97\u6cd5\uff08\u5e26\u6743\u91cd\u7684\u56fe\u7684\u5904\u7406\uff09","text":"<p>\u4e0b\u9762\u8fd9\u4e2a\u89c6\u9891\u8ba9\u6211\u5f04\u61c2\u4e86\u57fa\u672c\u6982\u5ff5\u548c\u601d\u8def\u3002 Dijkstra's Shortest Paths Algorithm for Graphs - YouTube</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#11_1","title":"1.1 \u5b9e\u73b0\u601d\u8def","text":"<p>\u7531\u4e8e\u662f\u5355\u6e90\uff0c\u6240\u4ee5\u8bb0\u6e90\u9876\u70b9\u4e3aS\uff0c\u4ee5\u4e0b\u4e3a\u5b9e\u73b0\u601d\u8def\uff1a 1. \u521d\u59cb\u5316    - \u521b\u5efa\u4e00\u4e2a\u96c6\u5408<code>visited</code>\uff0c\u8fd9\u4e2a\u662f\u8bb0\u5f55\u5df2\u7ecf\u627e\u5230\u6700\u77ed\u8def\u5f84\u7684\u8282\u70b9\u3002\u5f00\u59cb\u65f6\uff0c\u521d\u59cb\u5316\u4e3a\u7a7a\u7684\u5c31\u597d\u3002    - \u521b\u5efa\u4e00\u4e2a\u4f18\u5148\u961f\u5217\uff08\u5982\u6700\u5c0f\u5806\uff09\uff0c\u5c06\u6e90\u8282\u70b9\u52a0\u5165\u961f\u5217\u3002    -  \u521b\u5efa\u4e00\u4e2a\u6570\u7ec4<code>distance[i]</code>\uff0c\u7528\u4e8e\u5b58\u50a8\u4ece\u6e90\u8282\u70b9\u5230\u5176\u4ed6\u8282\u70b9\u7684\u5f53\u524d\u5df2\u77e5\u6700\u77ed\u8ddd\u79bb\u3002\u5c06<code>distance[S]</code>\u521d\u59cb\u5316\u4e3a0\uff1b\u5c06\u4f18\u5148\u961f\u5217\u4e2d\u7684\u9876\u70b9\u5bf9\u5e94\u7684\u8ddd\u79bb\uff0c\u8bbe\u7f6e\u4e3a\u6e90\u5230\u8be5\u9876\u70b9\u7684\u6743\u91cd\uff1b\u800c\u9664\u4f18\u5148\u961f\u5217\u4ee5\u5916\u7684\u5176\u4ed6\u6240\u6709\u8282\u70b9\u7684\u8ddd\u79bb\u521d\u59cb\u5316\u4e3a\u65e0\u7a77\u5927\u3002  </p> <ol> <li>\u4ece\u4f18\u5148\u961f\u5217\u4e2d\u53d6\u51fa\u76f8\u90bb\u8ddd\u79bb\u6700\u5c0f\u7684\u8282\u70b9 </li> <li>\u4ece\u4f18\u5148\u961f\u5217\u4e2d\u53d6\u51fa\u76f8\u90bb\u8ddd\u79bb\u6700\u5c0f\u7684\u8282\u70b9<code>u</code>\u3002\uff08\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u7b97\u6cd5\u7ed3\u675f\u3002\uff09  </li> <li> <p>\u5c06\u8282\u70b9<code>u</code>\u6807\u8bb0\u4e3a\u5df2\u8bbf\u95ee\uff08\u5c06\u5176\u6dfb\u52a0\u5230<code>visited</code>\u96c6\u5408\u4e2d\uff09\u3002  </p> </li> <li> <p>\u66f4\u65b0\u672a\u8bbf\u95ee\u90bb\u5c45\u7684\u8ddd\u79bb </p> </li> <li> <p>\u904d\u5386\u8282\u70b9<code>u</code>\u7684\u6240\u6709\u90bb\u5c45<code>v</code>\uff1a  </p> <ul> <li>\u5982\u679c<code>distance[v]</code>\u662f\u65e0\u7a77\u5927\u6216\u5176\u4ed6\u503c\uff1a  </li> <li>\u8ba1\u7b97\u901a\u8fc7\u8282\u70b9<code>u</code>\u5230\u8fbe\u8282\u70b9<code>v</code>\u7684\u8ddd\u79bb\uff0c\u5373<code>new_distance = distance[u] + weight(u, v)</code>\u3002 </li> <li>\u5982\u679c<code>new_distance</code>\u5c0f\u4e8e\u5f53\u524d\u5df2\u77e5\u7684<code>distance[v]</code>\uff0c\u5219\u66f4\u65b0<code>distance[v]</code>\u4e3a<code>new_distance</code>\u3002  </li> <li>\u5982\u679c\u8282\u70b9<code>v</code>\u5c1a\u672a\u5728\u4f18\u5148\u961f\u5217\u4e2d\uff0c\u6216\u8005\u5176\u5f53\u524d\u4f18\u5148\u7ea7\u9ad8\u4e8e\u65b0\u8ba1\u7b97\u7684\u8ddd\u79bb\uff0c\u5219\u5c06\u8282\u70b9<code>v</code>\uff08\u53ca\u5176\u65b0\u8ddd\u79bb\uff09\u52a0\u5165\u4f18\u5148\u961f\u5217\u3002  </li> </ul> </li> <li> <p>\u91cd\u590d </p> </li> <li> <p>\u91cd\u590d\u6b65\u9aa42\u548c3\uff0c\u76f4\u5230\u4f18\u5148\u961f\u5217\u4e3a\u7a7a\uff0c\u5373\u6240\u6709\u8282\u70b9\u90fd\u5df2\u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u5e76\u88ab\u6807\u8bb0\u4e3a\u5df2\u8bbf\u95ee\u3002  </p> </li> <li> <p>\u7ed3\u679c </p> </li> <li><code>distance[]</code>\u6570\u7ec4\u73b0\u5728\u5f97\u5230\u4e86\u4ece\u6e90\u8282\u70b9\u5230\u56fe\u4e2d\u6240\u6709\u5176\u4ed6\u8282\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002  </li> </ol> <p>\u00a0 \u6ce81\uff1a\u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\uff0c\u4f7f\u7528\u4f18\u5148\u961f\u5217\uff08\u5982\u6700\u5c0f\u5806\uff09\u6765\u5b58\u50a8\u548c\u9009\u62e9\u672a\u8bbf\u95ee\u7684\u8282\u70b9\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\u8fd9\u53ef\u4ee5\u786e\u4fdd\u5728\u6bcf\u4e00\u6b65\u4e2d\uff0c\u90fd\u9009\u62e9\u5f53\u524d\u8ddd\u79bb\u6700\u5c0f\u7684\u8282\u70b9\u8fdb\u884c\u5904\u7406\u3002 \u6ce82\uff1a\u6839\u636eAI\u7684\u8bf4\u6cd5\uff08\u4e5f\u5c31\u8bf4\uff0c\u6211\u8fd8\u672a\u6c42\u8bc1\u8fd9\u4e2a\u7ed3\u8bba\u306e\u5176\u771f\u5b9e\u6027\u634f\uff09\uff0cDijkstra\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e\u5b9e\u73b0\u548c\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\u3002\u4f7f\u7528\u4e8c\u53c9\u5806\u5b9e\u73b0\u7684\u4f18\u5148\u961f\u5217\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO((V + E)logV)\uff0c\u5176\u4e2dV\u662f\u8282\u70b9\u6570\uff0cE\u662f\u8fb9\u6570\u3002\u5982\u679c\u4f7f\u7528\u6590\u6ce2\u90a3\u5951\u5806\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u964d\u4f4e\u5230O(VlogV + E)\u3002 \u6ce83\uff1a\u8fd9\u4e2a\u7b97\u6cd5\u4e5f\u662f\u6e90\u81ea\u8d2a\u5fc3\u7b56\u7565\u634f......</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#12_1","title":"1.2 \u4ee3\u7801\u5b9e\u73b0\uff1a","text":"<p><pre><code>#define MAX 100007\nbool visited[MAX] = {false};\n//\u6e90\u9876\u70b9S\nint s;\nvoid Dijkstra(Graph *G,int s){\n    //\u521b\u5efa\u4f18\u5148\u961f\u5217\n    Queue *q;\n    //\u521d\u59cb\u5316\u961f\u5217\n    InitQueue( q );\n    int distance[MAX], i;\n    //for(i = 0;i &lt;= MAX;i ++){\n        if(i != s){\n            //\u5982\u679c\u4e0d\u662f\u6e90\u9876\u70b9\uff0c\u5c31\u8d4b\u503c\u4e3a\u201c\u65e0\u7a77\u5927\u201d\uff0c\n            //\u4f46\u662f\u65e0\u7a77\u5927\u663e\u7136\u662f\u6ca1\u6cd5\u76f4\u63a5\u8868\u793a\u7684\uff0c\u6240\u4ee5\u53d6999999\n            distance[i] = 999999;\n        }else{\n            distance[i] = 0;\n            visited[i] = true;\n        }\n    //}\n    //w\u5c31\u662f\u65b0\u90bb\u5c45\u634f\n    int w, new_distance;\n\n    //s\u5165\u961f\u5217\n    EnQueue(q, s);\n    visited[s] = true;\n    //IsEmpty\u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a\n    while( !IsEmpty(q) ){\n        v = DeQueue(q);\n        //FirstNeighbor(G, v):\u6c42\u56feG\u4e2d\u9876\u70b9v\u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\uff0c\n        //\u82e5\u6709\u5219\u8fd4\u56de\u9876\u70b9\u53f7\uff0c\u5426\u5219\u8fd4\u56de-1\u3002\n        //NextNeighbor(G, v, w):\u5047\u8bbe\u56feG\u4e2d\u9876\u70b9w\u662f\u9876\u70b9v\u7684\u4e00\u4e2a\u90bb\u63a5\u70b9\uff0c\u8fd4\u56de\u9664w\u548c\u5df2\u8bbf\u95ee\u5916\u7684\u9876\u70b9v\n        for(w = FirstNeighbor(G, v);w &gt;= 0;w = NextNeighbor(G, v, w)){\n            //calculate_distance\u5b9e\u73b0\u4e24\u9876\u70b9\u95f4\u6743\u7684\u8bfb\u53d6\n            new_distance = calculate_distance(v, w) + distance[v];\n            if(new_distance &lt;= distance[w]){\n                distance[w] = new_distance;\n            }\n            if(visited[w] == false) {\n                visited[w] = true;\n                EnQueue(w);\n            }\n        }\n    }\n}\n</code></pre> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#_5","title":"\u516d\u3001\u56fe\u7684\u904d\u5386","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#1-bfs-breadth-first-search","title":"1 \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22(BFS = breadth-first search)","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#11_2","title":"1.1 \u6982\u5ff5\u7406\u89e3","text":"<p>\u600e\u4e48\u7406\u89e3\u8fd9\u4e2a\u641c\u7d22\u65b9\u6cd5\u5462\uff1f\u770b\u5230\u6709\u975e\u5e38\u597d\u7684\u4e00\u4e2a\u601d\u8def\uff0c\u4f60\u628a\u5404\u9876\u70b9\u5f53\u6210\u4e00\u4e2a\u7403\uff0c\u8fb9\u5f53\u4f5c\u7ef3\u5b50\uff0c\u90a3\u4e48\u5f53\u4f60\u7528\u624b\u6293\u4f4f\u6e90\u7684\u65f6\u5019\u5176\u4ed6\u7403\u5c31\u4f1a\u81ea\u7136\u4e0b\u5782\uff0c\u5176\u5c42\u6b21\u7ed3\u6784\u5c31\u975e\u5e38\u6e05\u6670\u4e86\uff0c\u8fd9\u4e00\u65b9\u6cd5\u5c31\u662f\u5c06\u5404\u5c42\u6b21\u904d\u5386\u3002 \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u662f\u4e00\u79cd\u5206\u5c42\u7684\u67e5\u627e\u8fc7\u7a0b\uff0c\u6bcf\u5411\u524d\u8d70\u4e00\u6b65\u53ef\u80fd\u8bbf\u95ee\u4e00\u6279\u9876\u70b9\uff08\u5bf9\u5e94\u7ef3\u5b50\u6240\u8fde\u76f8\u540c\u9ad8\u5ea6\u7684\u7403\uff09\uff0c\u5b83\u4e0d\u662f\u4e00\u4e2a\u9012\u5f52\u7684\u7b97\u6cd5\u3002\u4e3a\u4e86\u5b9e\u73b0\u9010\u5c42\u7684\u8bbf\u95ee\uff0c\u7b97\u6cd5\u8fd8\u5fc5\u987b\u501f\u52a9\u4e00\u4e2a\u8f85\u52a9\u961f\u5217\uff0c\u4ee5\u8bb0\u5fc6\u6b63\u5728\u8bbf\u95ee\u7684\u9876\u70b9\u7684\u4e0b\u4e00\u5c42\u9876\u70b9\u3002 \u00a0</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#12_2","title":"1.2 \u4ee3\u7801\u5b9e\u73b0","text":"<pre><code>/*\u90bb\u63a5\u77e9\u9635\u7684\u5e7f\u5ea6\u904d\u5386\u7b97\u6cd5*/\nvoid BFSTraverse(MGraph G){\n    int i, j;\n    Queue Q;\n    //\u4e00\u5f00\u59cb\u5168\u90e8\u9876\u70b9\u90fd\u6ca1\u88ab\u8bbf\u95ee\u8fc7\uff0c\u6240\u4ee5\u8d4b\u4e3afalse\n    for(i = 0; i &lt; G.numVertexes; i ++){\n        visited[i] = false;\n    }\n    InitQueue(&amp;Q);  //\u521d\u59cb\u5316\u4e00\u8f85\u52a9\u7528\u7684\u961f\u5217\n    for(i = 0; i &lt; G.numVertexes; i++){\n        //\u82e5\u662f\u672a\u8bbf\u95ee\u8fc7\u5c31\u8bbe\u7f6e\u4e3a\u5df2\u8bbf\u95ee\uff0c\u540c\u65f6\u7eb3\u5165\u961f\u5217\n        if(!visited[i]){\n            vivited[i] = true;  //\u8bbe\u7f6e\u5f53\u524d\u8bbf\u95ee\u8fc7\n            EnQueue(&amp;Q, i); //\u5c06\u6b64\u9876\u70b9\u5165\u961f\u5217\n            //\u82e5\u5f53\u524d\u961f\u5217\u4e0d\u4e3a\u7a7a\n            while(!QueueEmpty(Q)){\n                DeQueue(&amp;Q, &amp;i);    //\u9876\u70b9i\u51fa\u961f\u5217\n                //FirstNeighbor(G,v):\u6c42\u56feG\u4e2d\u9876\u70b9v\u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\uff0c\n                //\u82e5\u6709\u5219\u8fd4\u56de\u9876\u70b9\u53f7\uff0c\u5426\u5219\u8fd4\u56de-1\u3002\n                //NextNeighbor(G,v,w):\u5047\u8bbe\u56feG\u4e2d\u9876\u70b9w\u662f\u9876\u70b9v\u7684\u4e00\u4e2a\u90bb\u63a5\u70b9\uff0c\u8fd4\u56de\u9664w\u5916\u9876\u70b9v\n                for(j = FirstNeighbor(G, i); j &gt;= 0; j = NextNeighbor(G, i, j)) {\n                    //\u68c0\u9a8ci\u7684\u6240\u6709\u90bb\u63a5\u70b9\n                    if(!visited[j]){\n                        visited[j] = true;  //\u8bbf\u95ee\u6807\u8bb0\n                        EnQueue(Q, j);  //\u9876\u70b9j\u5165\u961f\u5217\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#13_1","title":"1.3 \u590d\u6742\u5ea6\u5206\u6790","text":"<p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u660e\u663e\u961f\u5217\u7684\u7a7a\u95f4\u662f\u5927\u5934\uff0c\u800c\u961f\u5217\u7684\u5927\u5c0f\u53ea\u9700\u8981\u8003\u8651\u6781\u9650\u60c5\u51b5\uff0c\u5373|V|\u7684\u60c5\u51b5\uff0c\u6545\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(|V|)\\)\u3002 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u5bf9\u4e8e\u90bb\u63a5\u77e9\u9635\u800c\u8a00\uff0c\u7b2c\u4e00\u4e2a\u5faa\u73af\u5c06\u6240\u6709\u9876\u70b9\u8bbe\u7f6e\u4e3a\u672a\u8bbf\u95ee\uff0c\u4e3a|V|\uff0c\u7b2c\u4e8c\u4e2a\u5faa\u73af\u4e3b\u8981\u662f\u9700\u8981\u8bbf\u95ee\u90bb\u63a5\u70b9\uff0c\u663e\u7136\u590d\u6742\u5ea6\u4e3a\\(O(|V|^2)\\)\uff1b\u5bf9\u4e8e\u90bb\u63a5\u8868\u800c\u8a00\uff0c\u5148\u662f\u9876\u70b9\u8bbe\u7f6e\u4e3a\u6ca1\u6709\u8bbf\u95ee\uff0c\u4e3a|V|\uff0c\u7136\u540e\u518d\u67e5\u627e\u90bb\u63a5\u70b9\uff0c\u540c\u65f6\u90bb\u63a5\u70b9\u7684\u6570\u76ee\u5b9e\u9645\u5c31\u662f\u8be5\u9876\u70b9\u7684\u8fb9\u6570\uff0c\u6240\u4ee5\u4e3a|E|\uff0c\u7efc\u4e0a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(|E|+|V|)\\)\u3002</p> <p> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#2dfs-depth-first-search","title":"2.\u6df1\u5ea6\u4f18\u5148\u641c\u7d22(DFS = Depth First Search)","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#21_1","title":"2.1 \u6982\u5ff5\u7406\u89e3","text":"<p>\u8fd9\u4e2a\u53c8\u600e\u4e48\u7406\u89e3\u5462\uff1f\u4f60\u5c31\u60f3\u8c61\u6210\u201c\u4e0d\u649e\u5357\u5899\u4e0d\u56de\u5934\u201d\uff0c\u4e00\u76f4\u5f80\u4e0b\u4e00\u90bb\u63a5\u70b9\u4e0d\u505c\u6df1\u6316\uff0c\u5f53\u78b0\u58c1\u4e86\u5c31\u56de\u5230\u4e0a\u4e00\u9876\u70b9\u3002 DFS\u5c31\u662f\u8fd9\u4e2a\u610f\u601d\uff0c\u9996\u5148\u8bbf\u95ee\u56fe\u4e2d\u67d0\u4e00\u8d77\u59cb\u9876\u70b9v\uff0c\u7136\u540e\u7531v\u51fa\u53d1\uff0c\u8bbf\u95ee\u4e0ev\u90bb\u63a5\u4e14\u672a\u88ab\u8bbf\u95ee\u7684\u4efb\u4e00\u9876\u70b9......\u4e0d\u65ad\u5730\u91cd\u590d\uff0c\u5982\u679c\u4e0d\u80fd\u7ee7\u7eed\u5411\u4e0b\u8bbf\u95ee\uff0c\u5c31\u56de\u5230\u4e0a\u4e00\u4e2a\u9876\u70b9\uff0c\u4ee5\u6b64\u7c7b\u63a8\u76f4\u5230\u8bbf\u95ee\u6240\u6709\u8282\u70b9\u3002</p> <p> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#22_1","title":"2.2 \u4ee3\u7801\u5b9e\u73b0","text":"<p>\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u904d\u5386\u65b9\u6cd5\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u5206\u522b\u662f\u9012\u5f52\u548c\u8fed\u4ee3\uff0c\u9012\u5f52\u66f4\u7b80\u6d01\u66f4\u6e05\u6670\uff0c\u6240\u4ee5\u6b64\u5904\u4ec5\u5c55\u793a\u9012\u5f52\u65b9\u6cd5\u3002 <pre><code>//\u5c06\u8bb0\u5f55\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7\u7684\u6570\u7ec4\u521d\u59cb\u5316\n#define MAX 100007\nbool visited[MAX] = {false};\n\nvoid DFS_recursion(Graph G,int v) {\n    //\u5b9a\u4e49\u4e00\u4e2aw\u4f5c\u4e3a\u90bb\u63a5\u70b9\uff0c\u4fbf\u4e8e\u540e\u7eed\u64cd\u4f5c\n    int w;\n    //\u6e90\u80af\u5b9a\u8981\u5148\u88ab\u8bbf\u95ee\u7684\u5450\uff01\n    visited[v] = true;\n\n    for(w = FirstNeighbor(G, v); w &gt;= 0; w = NextNeighbor(G, v, w)){\n        if( Visited[w] = false ){\n            DFS_recursion(G, w);\n        }\n    }\n}\n</code></pre> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#23_1","title":"2.3 \u590d\u6742\u5ea6\u5206\u6790","text":"<p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u5bf9\u4e8e\u90bb\u63a5\u77e9\u9635\u800c\u8a00\uff0c\u4e3a\\(O(|V|^2)\\)\uff1b\u5bf9\u4e8e\u90bb\u63a5\u8868\u800c\u8a00\uff0c\u4e3a\\(O(|V| + |E|)\\)\u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O|V|\\) </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#_6","title":"\u4e03\u3001\u6700\u5927\u6d41\u95ee\u9898","text":"<p>\u00a0 \u753b\u56fe\u5c31\u597d\u4e86\uff0c\u6211\u770b\u57fa\u672c\u90fd\u662f\u9009\u62e9\u9898......</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#_7","title":"\u516b\u3001\u6700\u5c0f\u751f\u6210\u6811","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#1prim","title":"1.Prim\u7b97\u6cd5","text":"<p>\u4ece\u4e00\u4e2a\u9876\u70b9\u51fa\u53d1\uff0c\u5728\u4fdd\u8bc1\u4e0d\u5f62\u6210\u56de\u8def\u7684\u524d\u63d0\u4e0b\uff0c\u6bcf\u627e\u5230\u5e76\u6dfb\u52a0\u4e00\u6761\u6700\u77ed\u7684\u8fb9\uff0c\u5c31\u628a\u5f53\u524d\u5f62\u6210\u7684\u8fde\u901a\u5206\u91cf\u5f53\u505a\u4e00\u4e2a\u6574\u4f53\u6216\u8005\u4e00\u4e2a\u70b9\u770b\u5f85\uff0c\u7136\u540e\u91cd\u590d\u201c\u4ece\u5df2\u77e5\u9876\u70b9\u627e\u6700\u77ed\u7684\u8fb9\u5e76\u6dfb\u52a0\u201d\u7684\u64cd\u4f5c\u3002\u8fd9\u91cc\u501f\u7528\u4e86\u522b\u4eba\u7684\u4ee3\u7801\uff1a <pre><code>/*Prim\u7b97\u6cd5\u751f\u6210\u6700\u5c0f\u751f\u6210\u6811*/\nvoid MiniSpanTree_Prim(G){\n    int min, i, j, k;\n    int adjvex[MAXVEX]; //\u4fdd\u5b58\u76f8\u5173\u9876\u70b9\u4e0b\u6807\n    int lowcost[MAXVEX];    //\u4fdd\u5b58\u76f8\u5173\u9876\u70b9\u95f4\u8fb9\u7684\u6743\u503c\n    lowcost[0] = 0; //\u521d\u59cb\u5316\u7b2c\u4e00\u4e2a\u6743\u503c\u4e3a0\uff0c\u5373v0\u52a0\u5165\u751f\u6210\u6811\n    //lowcost\u7684\u503c\u4e3a0\uff0c\u5728\u8fd9\u91cc\u5c31\u662f\u6b64\u4e0b\u6807\u7684\u9876\u70b9\u5df2\u7ecf\u52a0\u5165\u751f\u6210\u6811\n    adjvex[0] = 0;  //\u521d\u59cb\u5316\u7b2c\u4e00\u4e2a\u9876\u70b9\u4e0b\u6807\u4e3a0\n    for(i=1; i&lt;G.numVertexes; i++){\n        lowcost[i] = G.arc[0][i];   //\u5c06v0\u9876\u70b9\u4e0e\u4e4b\u7ec4\u6210\u8fb9\u7684\u6743\u503c\u5b58\u5165\u6570\u7ec4\n        adjvex[i] = 0;  //\u521d\u59cb\u5316\u90fd\u4e3av0\u7684\u4e0b\u6807\n    }\n    for(i=1; i&lt;G.numVertexes; i++){\n        min = INFINITY; //\u521d\u59cb\u5316\u6700\u4e0b\u6743\u503c\u4e3a\u221e\uff0c\u901a\u5e38\u8bbe\u7f6e\u4e00\u4e2a\u4e0d\u53ef\u80fd\u7684\u5f88\u5927\u7684\u6570\u5b57\n        j = 1; k = 0;\n        //\u5faa\u73af\u5168\u90e8\u9876\u70b9\n        while(j &lt; G.numVertexes){\n            //\u5982\u679c\u6743\u503c\u4e0d\u4e3a0\u4e14\u6743\u503c\u5c0f\u4e8emin\n            if(lowcost[j] != 0 &amp;&amp; lowcost[j] &lt; min){\n                min = lowcost[j];   //\u5219\u8ba9\u5f53\u524d\u6743\u503c\u6210\u4e3a\u6700\u5c0f\u503c\n                k = j;  //\u5c06\u5f53\u524d\u6700\u5c0f\u503c\u7684\u4e0b\u6807\u5b58\u5165k\n            }\n            j++;\n        }\n        print(\"(%d, %d)\", adjvex[k], k);    //\u6253\u5370\u5f53\u524d\u9876\u70b9\u8fb9\u4e2d\u6743\u503c\u7684\u6700\u5c0f\u8fb9\n        for(j=1; j&lt;G.numvertexes; j++){\n            //\u82e5\u4e0b\u6807\u4e3ak\u9876\u70b9\u5404\u8fb9\u6743\u503c\u5c0f\u4e8e\u6b64\u524d\u8fd9\u4e9b\u9876\u70b9\u672a\u88ab\u52a0\u5165\u751f\u6210\u6811\u6743\u503c\n            if(lowcost[j] != 0 &amp;&amp; G.arc[k][j] &lt; lowcost[j]){\n                lowcost[j] = G.arc[k][j];   //\u5c06\u8f83\u5c0f\u6743\u503c\u5b58\u5165lowcost\n                adjvex[j] = k;  //\u5c06\u4e0b\u6807\u4e3ak\u7684\u9876\u70b9\u5b58\u5165adjvex\n            }\n        }\n    }\n}\n</code></pre> </p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#2kruskal","title":"2.Kruskal\u7b97\u6cd5","text":"<p>\u6309\u6743\u91cd\u987a\u5e8f\u8003\u8651\u6240\u6709\u8fb9\uff0c\u5e76\u4e0d\u8003\u8651\u4e4b\u524d\u662f\u5426\u8fde\u901a\uff08\u4f46\u662f\u4e0d\u80fd\u6210\u73af\u5bf9\u5427,,,,,,\uff09\u9010\u6b65\u6dfb\u52a0\u5230\u751f\u6210\u6811\u4e2d\uff0c\u540c\u65f6\u907f\u514d\u5f62\u6210\u73af\u8def\u3002\u6b64\u5904\u501f\u7528\u522b\u4eba\u4ee3\u7801\uff1a <pre><code>/*Kruskar\u7b97\u6cd5\u751f\u6210\u6700\u5c0f\u751f\u6210\u6811*/\nvoid MiniSpanTree_Kruskal(MGraph G){\n    int i, n, m;\n    Edge edges[MAXEDGE];    //\u5b9a\u4e49\u8fb9\u96c6\u6570\u7ec4\n    int parent[MAXVEX]; //\u5b9a\u4e49\u4e00\u6570\u7ec4\u7528\u6765\u5224\u65ad\u8fb9\u4e0e\u8fb9\u662f\u5426\u5f62\u6210\u73af\u8def\n    /*\u6b64\u5904\u7701\u7565\u5c06\u90bb\u63a5\u77e9\u9635G\u8f6c\u5316\u4e3a\u8fb9\u96c6\u6570\u7ec4edges\u5e76\u6309\u7167\u6743\u7531\u5c0f\u5230\u5927\u6392\u5e8f\u7684\u4ee3\u7801*/\n    for(i=0; i&lt;G.numVertexes; i++){\n        parent[i] = 0;  //\u521d\u59cb\u5316\u6570\u7ec4\u4e3a0\n    }\n    for(i=0; i&lt;G.numVertexes; i++){\n        n = Find(parent, edges[i].begin);\n        m = Find(parent, edge[i],end);\n        /*\u5047\u5982n\u4e0em\u4e0d\u7b49\uff0c\u8bf4\u660e\u6b64\u8fb9\u6ca1\u6709\u4e0e\u73b0\u6709\u751f\u6210\u6811\u5f62\u6210\u73af\u8def*/\n        if(n != m){\n        /*\u5c06\u6b64\u8fb9\u7684\u7ed3\u5c3e\u9876\u70b9\u653e\u5165\u4e0b\u6807\u4e3a\u8d77\u70b9\u7684parent\u4e2d\n        \u8868\u793a\u6b64\u9876\u70b9\u5df2\u7ecf\u5728\u751f\u6210\u6811\u96c6\u5408\u4e2d*/\n        parent[n] = m;\n        printf(\"(%d, %d, %d)\", edges[i].begin, \n                        edges[i].end, edges[i].weight);\n        }\n    }\n}\n\n/*\u67e5\u627e\u8fde\u7ebf\u9876\u70b9\u7684\u5c3e\u90e8\u4e0b\u6807*/\nint Find(int *parent, int f){\n    while(parent[f] &gt; 0){\n        f = parent[f];\n    }\n    return f;\n}\n</code></pre></p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#eulerian-circuiteulerian-path","title":"\u4e5d\u3001\u6b27\u62c9\u56de\u8def(Eulerian circuit)\u4e0e\u6b27\u62c9\u8def\u5f84(Eulerian path)","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#1_2","title":"1. \u5b9a\u4e49","text":"<p>\u6b27\u62c9\u56de\u8def\uff1a\u5728\u4e00\u4e2a\u56fe\u4e2d\uff0c\u5982\u679c\u5b58\u5728\u4e00\u6761\u8def\u5f84\uff0c\u5b83\u6070\u597d\u7ecf\u8fc7\u6bcf\u6761\u8fb9\u4e00\u6b21\uff0c\u5e76\u4e14\u8d77\u70b9\u548c\u7ec8\u70b9\u662f\u540c\u4e00\u4e2a\u9876\u70b9\uff0c\u90a3\u4e48\u8fd9\u6761\u8def\u5f84\u79f0\u4e3a\u6b27\u62c9\u56de\u8def\u3002 \u6b27\u62c9\u8def\u5f84/\u6b27\u62c9\u901a\u8def\uff1a\u5728\u4e00\u4e2a\u56fe\u4e2d\uff0c\u5982\u679c\u5b58\u5728\u4e00\u6761\u8def\u5f84\uff0c\u5b83\u6070\u597d\u7ecf\u8fc7\u6bcf\u6761\u8fb9\u4e00\u6b21\uff0c\u4f46\u8d77\u70b9\u548c\u7ec8\u70b9\u662f\u4e0d\u4e00\u5b9a\u76f8\u540c\u7684\u4e24\u4e2a\u9876\u70b9\uff0c\u90a3\u4e48\u8fd9\u6761\u8def\u5f84\u79f0\u4e3a\u6b27\u62c9\u8def\u5f84\u3002 \u6b27\u62c9\u56fe\uff1a\u542b\u6709\u6b27\u62c9\u56de\u8def\u7684\u56fe\u662f\u6b27\u62c9\u56fe\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Graph/#2_1","title":"2. \u5224\u5b9a","text":"<p>\u6709\u5411\u56fe\u5b58\u5728\u6b27\u62c9\u8def\u5f84\u4e0e\u6b27\u62c9\u56de\u8def\u7684\u5145\u8981\u6761\u4ef6\u5206\u522b\u662f\uff1a - \u6b27\u62c9\u8def\u5f84\uff1a\u6240\u6709\u70b9\u7684\u5165\u5ea6\u7b49\u4e8e\u51fa\u5ea6 \u6216\u8005 \u5b58\u5728\u4e00\u70b9\u51fa\u5ea6\u6bd4\u5165\u5ea6\u59271\uff08\u8d77\u70b9\uff09\uff0c\u4e00\u70b9\u5165\u5ea6\u6bd4\u51fa\u5ea6\u59271\uff08\u7ec8\u70b9\uff09\uff0c\u5176\u4ed6\u70b9\u7684\u5165\u5ea6\u5747\u7b49\u4e8e\u51fa\u5ea6\u3002 - \u6b27\u62c9\u56de\u8def\uff1a\u6240\u6709\u70b9\u7684\u5165\u5ea6\u7b49\u4e8e\u51fa\u5ea6\u3002</p> <p>\u65e0\u5411\u56fe\u5b58\u5728\u6b27\u62c9\u8def\u5f84\u548c\u6b27\u62c9\u56de\u8def\u7684\u5145\u8981\u6761\u4ef6\u5206\u522b\u4e3a\uff1a - \u6b27\u62c9\u8def\u5f84\uff1a\u6070\u597d\u6709\u4e24\u4e2a\u70b9\u5ea6\u662f\u5947\u6570\uff0c\u5176\u5b83\u9876\u70b9\u7684\u5ea6\u90fd\u662f\u5076\u6570 \u6216\u8005 \u6bcf\u4e2a\u9876\u70b9\u7684\u5ea6\u90fd\u662f\u5076\u6570\uff0c\u5219\u6709\u6b27\u62c9\u8def\u5f84\u3002 \u6ce8\uff1a\u5947\u6570\u5ea6\u7684\u70b9\u4e00\u5b9a\u662f\u6b27\u62c9\u8def\u5f84\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u3002 - \u6b27\u62c9\u56de\u8def\uff1a\u6bcf\u4e2a\u9876\u70b9\u7684\u5ea6\u90fd\u662f\u5076\u6570\uff0c\u5219\u6709\u6b27\u62c9\u56de\u8def\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Sort/","title":"\u4e00\u3001\u63d2\u5165\u6392\u5e8f(insertion sort)","text":"<p>\u7c7b\u6bd4\u6253\u6597\u5730\u4e3b\u65f6\u4e00\u628a\u6478\u8d77\u6765\u7684\u5927\u5806\u6251\u514b\u724c\uff0c\u6392\u5e8f\u65b9\u5f0f\u5dee\u4e0d\u591a\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Sort/#_1","title":"\uff08\u4f2a\uff09\u4ee3\u7801\u5b9e\u73b0","text":"<pre><code>void InsertionSort ( ElementType A[ ], int N ) {\n    int\u00a0 j, P;\n    ElementType\u00a0 Tmp;\n    for ( P = 1; P &lt; N; P ++ ) {\n        Tmp = A[ P ];\u00a0 /* the next coming card */\n        for ( j = P; j &gt; 0 &amp;&amp; A[ j - 1 ] &gt; Tmp; j -- )\n    \u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 A[ j ] = A[ j - 1 ];\n\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 /* shift sorted cards to provide a position for the new coming card */\n        A[ j ] = Tmp;\u00a0 /* place the new card at the proper position */\n\u00a0\u00a0\u00a0\u00a0\u00a0}\u00a0 /* end for-P-loop */\n\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Sort/#_2","title":"\u590d\u6742\u5ea6\u5206\u6790","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Sort/#_3","title":"\u65f6\u95f4\u590d\u6742\u5ea6","text":"<p>\u6700\u597d\u60c5\u51b5\uff1a\u5df2\u7ecf\u6392\u597d\u4e86\uff01\\(O(N)\\) \u6700\u574f\u60c5\u51b5\uff1a\u5b8c\u5168\u53cd\u8f6c\u7684\u3002\\(O(N^2)\\) \u4e00\u822c\u60c5\u51b5\uff1a\\(O(I + N)\\)\uff0cI\u8868\u793a\u53cd\u8f6c(inversion)\u7684\u6570\u6709\u591a\u5c11\u5bf9\u3002 \u53cd\u8f6c\uff1a\u5e8f\u53f7\u5927\u800c\u5bf9\u5e94\u6570\u636e\u5c0f\u3002\u6bd4\u598234, 8, 64, 51, 32, 21\u67099\u5bf9\u53cd\u8f6c\uff0c\u5206\u522b\u4e3a (34, 8) (34, 32) (34, 21) (64, 51) (64, 32) (64, 21) (51, 32) (51, 21) (32, 21)</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Sort/#_4","title":"\u7a7a\u95f4\u590d\u6742\u5ea6","text":"<p>\\(O(1)\\)</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Sort/#_5","title":"\u7a33\u5b9a\u6027\u5206\u6790","text":"<p>\u4e0d\u6539\u53d8\u5176\u4ed6\u5e8f\u5217\uff0c\u6240\u4ee5\u662f\u7a33\u5b9a\u7684</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Sort/#shell-sort","title":"\u4e8c\u3001\u5e0c\u5c14\u6392\u5e8f(shell sort)","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Sort/#_6","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<pre><code>void shellSort(int arr[], int n) { \n    // \u4e3a\u4e86\u627e\u5230\u6700\u5927\u7684\u5e0c\u5c14\u6392\u5e8f\u95f4\u9694\uff0c\u5148\u5c06\u5176\u521d\u59cb\u5316\u4e3a\u6570\u7ec4\u957f\u5ea6\n    int gap = sizeof(arr) / sizeof(arr[0])\n    //\u8fdb\u884c\u5e0c\u5c14\u6392\u5e8f\n    while (gap &gt; 0) { \n        gap /= 2;\n        for (int i = gap; i &lt; n; i ++) { \n            int temp = arr[i]; int j; \n            for (j = i; j &gt;= gap &amp;&amp; arr[j - gap] &gt; temp; j -= gap) { \n                arr[j] = arr[j - gap]; \n            } \n            arr[j] = temp; \n        }\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Sort/#_7","title":"\u590d\u6742\u5ea6\u5206\u6790","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Sort/#_8","title":"\u65f6\u95f4\u590d\u6742\u5ea6","text":"<p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(N^{1.5})\\)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u4e0b\u754c\u4e3a\\(O(N*logN)\\)\uff0c\u4e0a\u754c\uff08\u6700\u574f\uff09\u4e3a\\(\\Theta (N^2)\\)\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Sort/#_9","title":"\u7a7a\u95f4\u590d\u6742\u5ea6","text":"<p>\\(O(1)\\)</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Sort/#_10","title":"\u7a33\u5b9a\u6027\u5206\u6790","text":"<p>\u4e0d\u7a33\u5b9a\u7684</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Sort/#heapsort","title":"\u4e09\u3001\u5806\u6392\u5e8f(heapsort)","text":"<p>Heap sort visualization | What is heap sort and How does it work?? - YouTube\u8be5\u89c6\u9891\u7684\u56fe\u89e3\u5f88\u6e05\u6670</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Sort/#_11","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>```C  void heapify(int arr[], int n, int i) { \u00a0 \u00a0 int largest = i; // Initialize largest as root \u00a0 \u00a0 int left = 2 * i + 1; // left = 2i + 1 \u00a0 \u00a0 int right = 2 * i + 2; // right = 2i + 2</p> <p>// If left child is larger than root</p> <p>if (left &lt; n &amp;&amp; arr[left] &gt; arr[largest]) \u00a0 \u00a0 \u00a0 \u00a0 largest = left;</p> <p>// If right child is larger than largest so far</p> <p>if (right &lt; n &amp;&amp; arr[right] &gt; arr[largest]) \u00a0 \u00a0 \u00a0 \u00a0 largest = right;</p> <p>// If largest is not root</p> <p>if (largest != i) { \u00a0 \u00a0 \u00a0 \u00a0 int swap = arr[i]; \u00a0 \u00a0 \u00a0 \u00a0 arr[i] = arr[largest]; \u00a0 \u00a0 \u00a0 \u00a0 arr[largest] = swap; \u00a0 \u00a0 \u00a0 \u00a0 // Recursively heapify the affected sub-tree \u00a0 \u00a0 \u00a0 \u00a0 heapify(arr, n, largest); \u00a0 \u00a0 } } </p> <p>// Main function to do heap sort</p> <p>void heapSort(int arr[], int n) { \u00a0 \u00a0 // Build heap (rearrange array) \u00a0 \u00a0 for (int i = n / 2 - 1; i &gt;= 0; i --) \u00a0 \u00a0 \u00a0 \u00a0 heapify(arr, n, i); \u00a0 \u00a0 // One by one extract an element from heap \u00a0 \u00a0 for (int i = n - 1; i &gt;= 0; i --) { \u00a0 \u00a0 \u00a0 \u00a0 // Move current root to end \u00a0 \u00a0 \u00a0 \u00a0 int temp = arr[0]; \u00a0 \u00a0 \u00a0 \u00a0 arr[0] = arr[i]; \u00a0 \u00a0 \u00a0 \u00a0 arr[i] = temp; \u00a0 \u00a0 \u00a0 \u00a0 // call max heapify on the reduced heap \u00a0 \u00a0 \u00a0 \u00a0 heapify(arr, i, 0); \u00a0 \u00a0 }</p> <p>} <pre><code>## \u590d\u6742\u5ea6\u5206\u6790\n\n### \u65f6\u95f4\u590d\u6742\u5ea6\n\n- \u5efa\u7acb\u5806\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u00a0$O(n)$\uff0c\u5176\u4e2dn\u662f\u6570\u7ec4\u7684\u957f\u5ea6\u3002\n- \u8c03\u6574\u5806\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u00a0$O(\\log n)$\uff0c\u56e0\u4e3a\u6bcf\u6b21\u8c03\u6574\u5806\u7684\u64cd\u4f5c\u53ea\u4f1a\u5f71\u54cd\u4e00\u6761\u5206\u652f\u3002\n- \u56e0\u4e3a\u6709n\u4e2a\u5143\u7d20\u9700\u8981\u88ab\u79fb\u9664\u5e76\u8c03\u6574\u5806\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u00a0$O(n \\log n)$\u3002\n\n### \u7a7a\u95f4\u590d\u6742\u5ea6\n\n\u4e0d\u9700\u8981\u989d\u5916\u7a7a\u95f4\uff0c\u4ec5\u4e3a$O(1)$\n\n## \u7a33\u5b9a\u6027\u5206\u6790\n\n\u4e0d\u7a33\u5b9a\u7684\n\n# \u56db\u3001\u5f52\u5e76\u6392\u5e8f\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```C\nvoid merge(int arr[], int l, int m, int r) { \n    int i, j, k; \n    int n1 = m - l + 1; \n    int n2 = r - m; \n    // \u521b\u5efa\u4e34\u65f6\u6570\u7ec4 \n    int L[n1], R[n2]; \n    // \u62f7\u8d1d\u6570\u636e\u5230\u4e34\u65f6\u6570\u7ec4 \n    for (i = 0; i &lt; n1; i++) \n        L[i] = arr[l + i]; \n    for (j = 0; j &lt; n2; j++) \n        R[j] = arr[m + 1 + j]; \n\n    // \u5408\u5e76\u4e34\u65f6\u6570\u7ec4\u56de\u5230\u539f\u6570\u7ec4 \n    i = 0; \n    j = 0; \n    k = l; \n    while (i &lt; n1 &amp;&amp; j &lt; n2) { \n        if (L[i] &lt;= R[j]) { \n        arr[k] = L[i]; i++; \n        } else { \n        arr[k] = R[j]; j++; \n        } \n        k++; \n    } \n    // \u62f7\u8d1d L[] \u7684\u5269\u4f59\u5143\u7d20 \n    while (i &lt; n1) { \n    arr[k] = L[i]; \n    i++; \n    k++; \n    }\n    // \u62f7\u8d1d R[] \u7684\u5269\u4f59\u5143\u7d20 \n    while (j &lt; n2) { \n    arr[k] = R[j]; \n    j++; \n    k++; \n    } \n} \n\n\n// \u4e3b\u51fd\u6570\u7528\u4e8e\u6392\u5e8f \nvoid mergeSort(int arr[], int l, int r) { \n    if (l &lt; r) { \n        // \u627e\u5230\u4e2d\u95f4\u70b9 \n        int m = l + (r - l) / 2; \n        // \u5206\u522b\u5bf9\u524d\u534a\u90e8\u5206\u548c\u540e\u534a\u90e8\u5206\u8fdb\u884c\u6392\u5e8f \n        mergeSort(arr, l, m); \n        mergeSort(arr, m + 1, r); \n        // \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u90e8\u5206 \n        merge(arr, l, m, r); \n    } \n}\n</code></pre></p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Sort/#_12","title":"\u590d\u6742\u5ea6\u5206\u6790","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Sort/#_13","title":"\u65f6\u95f4\u590d\u6742\u5ea6","text":"<p>\\(O(N \\log N)\\)</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Sort/#_14","title":"\u7a7a\u95f4\u590d\u6742\u5ea6","text":"<p>\u9700\u8981\u603b\u5171\u957f\u5ea6\u4e3aN\u7684\u82e5\u5e72\u6570\u7ec4\uff0c\u6545\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(N)\\)</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Sort/#_15","title":"\u7a33\u5b9a\u6027\u5206\u6790","text":"<p>\u7a33\u5b9a\u7684\uff08\u5b83\u4e0d\u4f1a\u6539\u53d8\u76f8\u7b49\u5143\u7d20\u7684\u6392\u5e8f\uff09</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/Tree/","title":"\u6811\u7684\u6982\u5ff5","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80/unfinished/","title":"\u5f85\u5b8c\u6210","text":"<p>\u8fd9\u4eba\u5f88\u61d2\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u60f3\u505a\u3002</p>"}]}